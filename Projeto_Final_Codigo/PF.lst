CCS PCM C Compiler, Version 5.076, 56587               01-jul-24 16:40

               Filename:   D:\Documentos\Faculdade\6o_Periodo\Microprocessadores_e_Microcontroladores\Projetos\C\Projeto Final\Jogo_Da_Velha_Com_PIC16F877A\Projeto_Final_Codigo\PF.lst

               ROM used:   811 words (10%)
                           Largest free fragment is 2048
               RAM used:   38 (10%) at main() level
                           42 (11%) worst case
               Stack used: 3 locations (2 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   2B2
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <PF.h> 
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
*
0040:  CLRF   77
0041:  CLRF   78
0042:  MOVF   43,W
0043:  BCF    03.0
0044:  BTFSC  44.0
0045:  ADDWF  77,F
0046:  RRF    77,F
0047:  RRF    78,F
0048:  BTFSC  44.1
0049:  ADDWF  77,F
004A:  RRF    77,F
004B:  RRF    78,F
004C:  BTFSC  44.2
004D:  ADDWF  77,F
004E:  RRF    77,F
004F:  RRF    78,F
0050:  BTFSC  44.3
0051:  ADDWF  77,F
0052:  RRF    77,F
0053:  RRF    78,F
0054:  BTFSC  44.4
0055:  ADDWF  77,F
0056:  RRF    77,F
0057:  RRF    78,F
0058:  BTFSC  44.5
0059:  ADDWF  77,F
005A:  RRF    77,F
005B:  RRF    78,F
005C:  BTFSC  44.6
005D:  ADDWF  77,F
005E:  RRF    77,F
005F:  RRF    78,F
0060:  BTFSC  44.7
0061:  ADDWF  77,F
0062:  RRF    77,F
0063:  RRF    78,F
0064:  RETURN
....................  
.................... #list 
....................  
.................... #device ADC = 10 
....................  
.................... #FUSES PUT        // Power Up Timer 
.................... #FUSES NOMCLR     // Master Clear pin used for I/O 
.................... #FUSES NOPROTECT  // Code not protected from reading 
.................... #FUSES NOCPD      // No EE protection 
.................... #FUSES NOBROWNOUT // No brownout reset 
.................... #FUSES IESO       // Internal External Switch Over mode enabled 
.................... #FUSES FCMEN      // Fail-safe clock monitor enabled 
.................... #FUSES NOLVP      // No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES BORV40     // Brownout reset at 4.0V 
.................... #FUSES NOWRT      // Program memory not write protected 
....................  
.................... #use delay(crystal = 8MHz) 
.................... #use FIXED_IO(A_outputs = PIN_A5) 
.................... #use FIXED_IO(B_outputs = PIN_B7, PIN_B6, PIN_B5, PIN_B4, PIN_B3, PIN_B2, PIN_B1, PIN_B0) 
.................... #use FIXED_IO(C_outputs = PIN_C7, PIN_C6, PIN_C5, PIN_C4, PIN_C3, PIN_C2, PIN_C1, PIN_C0) 
.................... #use FIXED_IO(D_outputs = PIN_D7, PIN_D6, PIN_D5, PIN_D4, PIN_D3, PIN_D2, PIN_D1, PIN_D0) 
.................... #use FIXED_IO(E_outputs = PIN_E0) 
.................... #define B_CONFIRM PIN_A0 
.................... #define B_MOVE PIN_A1 
.................... #define B_RESET PIN_A2 
.................... #define RED1 PIN_A5 
.................... #define RED2 PIN_B0 
.................... #define RED3 PIN_B1 
.................... #define GREEN1 PIN_B2 
.................... #define GREEN2 PIN_B3 
.................... #define GREEN3 PIN_B4 
.................... #define LIN1 PIN_B7 
.................... #define LIN2 PIN_B6 
.................... #define LIN3 PIN_B5 
.................... #define GND PIN_E0 
.................... #define A1 PIN_C0 
.................... #define A2 PIN_C1 
.................... #define A3 PIN_C2 
.................... #define A4 PIN_C3 
.................... #define A5 PIN_C4 
.................... #define A6 PIN_C5 
.................... #define A7 PIN_C6 
.................... #define A8 PIN_C7 
.................... #define B1 PIN_D0 
.................... #define B2 PIN_D1 
.................... #define B3 PIN_D2 
.................... #define B4 PIN_D3 
.................... #define B5 PIN_D4 
.................... #define B6 PIN_D5 
.................... #define B7 PIN_D6 
.................... #define B8 PIN_D7 
....................  
....................  
.................... int1 fimtempo = 0, ja_li_reset = 0, ja_li_mov = 0, ja_li_conf = 0, isMovido = 0; 
.................... int16 tempo = 0; 
.................... int8 i = 0, j = 0, x = 0, y = 0, cursorx = 0, cursory = 0, filtro_reset = 100, filtro_mov = 100, filtro_conf = 100; 
.................... int8 pontuacaoJ1 = 0, pontuacaoJ2 = 0, ganhador = 0, contvelha = 0; 
.................... int8 tabuleiro[3][3]; 
....................  
.................... void reinicia_tabuleiro(); 
.................... void acende_tabuleiro(); 
.................... void move_cursor(); 
.................... int8 verifica_ganhador(int8 matriz[3][3]); 
.................... void zera_jogo(); 
....................  
.................... #INT_TIMER0 
.................... void TIMER0_isr(VOID) 
.................... { 
....................     tempo++; 
*
002F:  INCF   28,F
0030:  BTFSC  03.2
0031:  INCF   29,F
....................  
....................     if (tempo == 35) 
0032:  MOVF   28,W
0033:  SUBLW  23
0034:  BTFSS  03.2
0035:  GOTO   03C
0036:  MOVF   29,F
0037:  BTFSS  03.2
0038:  GOTO   03C
....................     { 
....................         tempo = 0; 
0039:  CLRF   29
003A:  CLRF   28
....................         fimtempo = 1; 
003B:  BSF    27.0
....................     } 
003C:  BCF    0B.2
003D:  BCF    0A.3
003E:  BCF    0A.4
003F:  GOTO   01B
.................... } 
....................  
.................... void main() 
*
02B2:  MOVF   03,W
02B3:  ANDLW  1F
02B4:  MOVWF  03
02B5:  BCF    27.0
02B6:  BCF    27.1
02B7:  BCF    27.2
02B8:  BCF    27.3
02B9:  BCF    27.4
02BA:  CLRF   29
02BB:  CLRF   28
02BC:  CLRF   2A
02BD:  CLRF   2B
02BE:  CLRF   2C
02BF:  CLRF   2D
02C0:  CLRF   2E
02C1:  CLRF   2F
02C2:  MOVLW  64
02C3:  MOVWF  30
02C4:  MOVWF  31
02C5:  MOVWF  32
02C6:  CLRF   33
02C7:  CLRF   34
02C8:  CLRF   35
02C9:  CLRF   36
02CA:  BSF    03.5
02CB:  BSF    03.6
02CC:  MOVF   09,W
02CD:  ANDLW  C0
02CE:  MOVWF  09
02CF:  BCF    03.6
02D0:  BCF    1F.4
02D1:  BCF    1F.5
02D2:  MOVLW  00
02D3:  BSF    03.6
02D4:  MOVWF  08
02D5:  BCF    03.5
02D6:  CLRF   07
02D7:  CLRF   08
02D8:  CLRF   09
02D9:  BCF    03.7
.................... { 
....................     setup_timer_0(RTCC_INTERNAL | RTCC_DIV_8 | RTCC_8_BIT); // 1, 0 ms overflow 
02DA:  BSF    03.5
02DB:  BCF    03.6
02DC:  MOVF   01,W
02DD:  ANDLW  C0
02DE:  IORLW  02
02DF:  MOVWF  01
....................     enable_interrupts(INT_TIMER0); 
02E0:  BCF    03.5
02E1:  BSF    0B.5
....................     enable_interrupts(GLOBAL); 
02E2:  MOVLW  C0
02E3:  IORWF  0B,F
....................  
....................     reinicia_tabuleiro(); 
02E4:  CALL   065
....................  
....................     while (TRUE) 
....................     { 
....................         if (input(B_RESET) == 0) 
02E5:  MOVLW  DF
02E6:  BSF    03.5
02E7:  MOVWF  05
02E8:  BCF    03.5
02E9:  BTFSC  05.2
02EA:  GOTO   2F2
....................         { 
....................             filtro_reset--; 
02EB:  DECFSZ 30,F
....................             if (filtro_reset == 0 && ja_li_reset == 0) 
02EC:  GOTO   2F1
02ED:  BTFSC  27.1
02EE:  GOTO   2F1
....................             { 
....................                 ja_li_reset = 1; 
02EF:  BSF    27.1
....................                 reinicia_tabuleiro(); 
02F0:  CALL   065
....................             } 
....................         } 
02F1:  GOTO   2F5
....................         else 
....................         { 
....................             ja_li_reset = 0; 
02F2:  BCF    27.1
....................             filtro_reset = 100; 
02F3:  MOVLW  64
02F4:  MOVWF  30
....................         } 
....................  
....................         if (input(B_MOVE) == 0) 
02F5:  MOVLW  DF
02F6:  BSF    03.5
02F7:  MOVWF  05
02F8:  BCF    03.5
02F9:  BTFSC  05.1
02FA:  GOTO   302
....................         { 
....................             filtro_mov--; 
02FB:  DECFSZ 31,F
....................             if (filtro_mov == 0 && ja_li_mov == 0) 
02FC:  GOTO   301
02FD:  BTFSC  27.2
02FE:  GOTO   301
....................             { 
....................                 ja_li_mov = 1; 
02FF:  BSF    27.2
....................                 move_cursor(); 
0300:  GOTO   084
....................             } 
....................         } 
0301:  GOTO   305
....................         else 
....................         { 
....................             ja_li_mov = 0; 
0302:  BCF    27.2
....................             filtro_mov = 100; 
0303:  MOVLW  64
0304:  MOVWF  31
....................         } 
....................  
....................         // if (input(B_CONFIRM) == 0) 
....................         // { 
....................         //    filtro_conf--; 
....................         //    if (filtro_conf == 0 && ja_li_conf == 0) 
....................         //    { 
....................         //       ja_li_conf = 1; 
....................         //       // executar função confirma_acao() 
....................         //    } 
....................         // } 
....................         // else 
....................         // { 
....................         //    ja_li_conf = 0; 
....................         //    filtro_conf = 100; 
....................         // } 
....................  
....................         if (fimtempo) 
0305:  BTFSS  27.0
0306:  GOTO   329
....................         { 
....................             acende_tabuleiro(); 
0307:  GOTO   0BC
....................             y += 1; 
0308:  MOVLW  01
0309:  ADDWF  2D,F
....................             if (y > 2) 
030A:  MOVF   2D,W
030B:  SUBLW  02
030C:  BTFSC  03.0
030D:  GOTO   315
....................             { 
....................                 x += 1; 
030E:  MOVLW  01
030F:  ADDWF  2C,F
....................                 y = 0; 
0310:  CLRF   2D
....................                 if (x > 2) 
0311:  MOVF   2C,W
0312:  SUBLW  02
0313:  BTFSS  03.0
....................                 { 
....................                     x = 0; 
0314:  CLRF   2C
....................                 } 
....................             } 
....................  
....................             ganhador = verifica_ganhador(tabuleiro); 
0315:  CLRF   41
0316:  MOVLW  37
0317:  MOVWF  40
0318:  GOTO   178
0319:  MOVF   78,W
031A:  MOVWF  35
....................  
....................             if (ganhador != 0) 
031B:  MOVF   35,F
031C:  BTFSC  03.2
031D:  GOTO   328
....................             { 
....................                 if (ganhador == 1) 
031E:  DECFSZ 35,W
031F:  GOTO   322
....................                 { 
....................  
....................                     pontuacaoJ1++; 
0320:  INCF   33,F
....................                     // DAR UM RETORNO VISUAL PARA O USUARIO 
....................                 } 
0321:  GOTO   327
....................                 else if (ganhador == 2) 
0322:  MOVF   35,W
0323:  SUBLW  02
0324:  BTFSS  03.2
0325:  GOTO   327
....................                 { 
....................  
....................                     pontuacaoJ2++; 
0326:  INCF   34,F
....................                     // DAR UM RETORNO VISUAL PARA O USUARIO 
....................                 } 
....................                 else 
....................                 { 
....................                     // DAR UM RETORNO VISUAL PARA O USUARIO QUE DEU VEIA 
....................                 } 
....................  
....................                 reinicia_tabuleiro(); 
0327:  CALL   065
....................             } 
....................  
....................             fimtempo = 0; 
0328:  BCF    27.0
....................         } 
0329:  GOTO   2E5
....................     } 
.................... } 
....................  
032A:  SLEEP
.................... void reinicia_tabuleiro() 
.................... { 
....................     for (i = 0; i < 3; i++) 
*
0065:  CLRF   2A
0066:  MOVF   2A,W
0067:  SUBLW  02
0068:  BTFSS  03.0
0069:  GOTO   07F
....................     { 
....................         for (j = 0; j < 3; j++) 
006A:  CLRF   2B
006B:  MOVF   2B,W
006C:  SUBLW  02
006D:  BTFSS  03.0
006E:  GOTO   07D
....................         { 
....................             tabuleiro[i][j] = -1; 
006F:  MOVF   2A,W
0070:  MOVWF  43
0071:  MOVLW  03
0072:  MOVWF  44
0073:  CALL   040
0074:  MOVF   2B,W
0075:  ADDWF  78,W
0076:  ADDLW  37
0077:  MOVWF  04
0078:  BCF    03.7
0079:  MOVLW  FF
007A:  MOVWF  00
007B:  INCF   2B,F
007C:  GOTO   06B
....................         } 
007D:  INCF   2A,F
007E:  GOTO   066
....................     } 
....................  
....................     tabuleiro[0][0] = 0; 
007F:  CLRF   37
....................     cursorx = cursory = 0; 
0080:  CLRF   2F
0081:  MOVF   2F,W
0082:  MOVWF  2E
0083:  RETURN
.................... } 
....................  
.................... void acende_tabuleiro() 
.................... { 
....................     output_high(LIN1); 
*
00BC:  MOVLW  00
00BD:  BSF    03.5
00BE:  MOVWF  06
00BF:  BCF    03.5
00C0:  BSF    06.7
....................     output_high(LIN2); 
00C1:  BSF    03.5
00C2:  MOVWF  06
00C3:  BCF    03.5
00C4:  BSF    06.6
....................     output_high(LIN3); 
00C5:  BSF    03.5
00C6:  MOVWF  06
00C7:  BCF    03.5
00C8:  BSF    06.5
....................     output_low(RED1); 
00C9:  MOVLW  DF
00CA:  BSF    03.5
00CB:  MOVWF  05
00CC:  BCF    03.5
00CD:  BCF    05.5
....................     output_low(RED2); 
00CE:  MOVLW  00
00CF:  BSF    03.5
00D0:  MOVWF  06
00D1:  BCF    03.5
00D2:  BCF    06.0
....................     output_low(RED3); 
00D3:  BSF    03.5
00D4:  MOVWF  06
00D5:  BCF    03.5
00D6:  BCF    06.1
....................     output_low(GREEN1); 
00D7:  BSF    03.5
00D8:  MOVWF  06
00D9:  BCF    03.5
00DA:  BCF    06.2
....................     output_low(GREEN2); 
00DB:  BSF    03.5
00DC:  MOVWF  06
00DD:  BCF    03.5
00DE:  BCF    06.3
....................     output_low(GREEN3); 
00DF:  BSF    03.5
00E0:  MOVWF  06
00E1:  BCF    03.5
00E2:  BCF    06.4
....................  
....................     if (x == 0) 
00E3:  MOVF   2C,F
00E4:  BTFSS  03.2
00E5:  GOTO   0EC
....................     { 
....................         output_low(LIN1); 
00E6:  MOVLW  00
00E7:  BSF    03.5
00E8:  MOVWF  06
00E9:  BCF    03.5
00EA:  BCF    06.7
....................     } 
00EB:  GOTO   0FD
....................     else if (x == 1) 
00EC:  DECFSZ 2C,W
00ED:  GOTO   0F4
....................     { 
....................         output_low(LIN2); 
00EE:  MOVLW  00
00EF:  BSF    03.5
00F0:  MOVWF  06
00F1:  BCF    03.5
00F2:  BCF    06.6
....................     } 
00F3:  GOTO   0FD
....................     else if (x == 2) 
00F4:  MOVF   2C,W
00F5:  SUBLW  02
00F6:  BTFSS  03.2
00F7:  GOTO   0FD
....................     { 
....................         output_low(LIN3); 
00F8:  MOVLW  00
00F9:  BSF    03.5
00FA:  MOVWF  06
00FB:  BCF    03.5
00FC:  BCF    06.5
....................     } 
....................  
....................     if (tabuleiro[x][y] == 1) 
00FD:  MOVF   2C,W
00FE:  MOVWF  43
00FF:  MOVLW  03
0100:  MOVWF  44
0101:  CALL   040
0102:  MOVF   2D,W
0103:  ADDWF  78,W
0104:  ADDLW  37
0105:  MOVWF  04
0106:  BCF    03.7
0107:  DECFSZ 00,W
0108:  GOTO   120
....................     { 
....................         if (y == 0) 
0109:  MOVF   2D,F
010A:  BTFSS  03.2
010B:  GOTO   112
....................         { 
....................             output_high(RED1); 
010C:  MOVLW  DF
010D:  BSF    03.5
010E:  MOVWF  05
010F:  BCF    03.5
0110:  BSF    05.5
....................         } 
0111:  GOTO   11F
....................         else if (y == 1) 
0112:  DECFSZ 2D,W
0113:  GOTO   11A
....................         { 
....................             output_high(RED2); 
0114:  MOVLW  00
0115:  BSF    03.5
0116:  MOVWF  06
0117:  BCF    03.5
0118:  BSF    06.0
....................         } 
0119:  GOTO   11F
....................         else 
....................         { 
....................             output_high(RED3); 
011A:  MOVLW  00
011B:  BSF    03.5
011C:  MOVWF  06
011D:  BCF    03.5
011E:  BSF    06.1
....................         } 
....................     } 
011F:  GOTO   175
....................     else if (tabuleiro[x][y] == 2) 
0120:  MOVF   2C,W
0121:  MOVWF  43
0122:  MOVLW  03
0123:  MOVWF  44
0124:  CALL   040
0125:  MOVF   2D,W
0126:  ADDWF  78,W
0127:  ADDLW  37
0128:  MOVWF  04
0129:  BCF    03.7
012A:  MOVF   00,W
012B:  SUBLW  02
012C:  BTFSS  03.2
012D:  GOTO   145
....................     { 
....................         if (y == 0) 
012E:  MOVF   2D,F
012F:  BTFSS  03.2
0130:  GOTO   137
....................         { 
....................             output_high(GREEN1); 
0131:  MOVLW  00
0132:  BSF    03.5
0133:  MOVWF  06
0134:  BCF    03.5
0135:  BSF    06.2
....................         } 
0136:  GOTO   144
....................         else if (y == 1) 
0137:  DECFSZ 2D,W
0138:  GOTO   13F
....................         { 
....................             output_high(GREEN2); 
0139:  MOVLW  00
013A:  BSF    03.5
013B:  MOVWF  06
013C:  BCF    03.5
013D:  BSF    06.3
....................         } 
013E:  GOTO   144
....................         else 
....................         { 
....................             output_high(GREEN3); 
013F:  MOVLW  00
0140:  BSF    03.5
0141:  MOVWF  06
0142:  BCF    03.5
0143:  BSF    06.4
....................         } 
....................     } 
0144:  GOTO   175
....................     else if (tabuleiro[x][y] == 0) 
0145:  MOVF   2C,W
0146:  MOVWF  43
0147:  MOVLW  03
0148:  MOVWF  44
0149:  CALL   040
014A:  MOVF   2D,W
014B:  ADDWF  78,W
014C:  ADDLW  37
014D:  MOVWF  04
014E:  BCF    03.7
014F:  MOVF   00,F
0150:  BTFSS  03.2
0151:  GOTO   175
....................     { 
....................         if (y == 0) 
0152:  MOVF   2D,F
0153:  BTFSS  03.2
0154:  GOTO   160
....................         { 
....................             output_high(RED1); 
0155:  MOVLW  DF
0156:  BSF    03.5
0157:  MOVWF  05
0158:  BCF    03.5
0159:  BSF    05.5
....................             output_high(GREEN1); 
015A:  MOVLW  00
015B:  BSF    03.5
015C:  MOVWF  06
015D:  BCF    03.5
015E:  BSF    06.2
....................         } 
015F:  GOTO   175
....................         else if (y == 1) 
0160:  DECFSZ 2D,W
0161:  GOTO   16C
....................         { 
....................             output_high(RED2); 
0162:  MOVLW  00
0163:  BSF    03.5
0164:  MOVWF  06
0165:  BCF    03.5
0166:  BSF    06.0
....................             output_high(GREEN2); 
0167:  BSF    03.5
0168:  MOVWF  06
0169:  BCF    03.5
016A:  BSF    06.3
....................         } 
016B:  GOTO   175
....................         else 
....................         { 
....................             output_high(RED3); 
016C:  MOVLW  00
016D:  BSF    03.5
016E:  MOVWF  06
016F:  BCF    03.5
0170:  BSF    06.1
....................             output_high(GREEN3); 
0171:  BSF    03.5
0172:  MOVWF  06
0173:  BCF    03.5
0174:  BSF    06.4
....................         } 
....................     } 
0175:  BCF    0A.3
0176:  BCF    0A.4
0177:  GOTO   308 (RETURN)
.................... } 
....................  
.................... void move_cursor() 
.................... { 
....................     tabuleiro[cursorx][cursory] = -1; 
*
0084:  MOVF   2E,W
0085:  MOVWF  43
0086:  MOVLW  03
0087:  MOVWF  44
0088:  CALL   040
0089:  MOVF   2F,W
008A:  ADDWF  78,W
008B:  ADDLW  37
008C:  MOVWF  04
008D:  BCF    03.7
008E:  MOVLW  FF
008F:  MOVWF  00
....................     isMovido = 0; 
0090:  BCF    27.4
....................     while (isMovido == 0) 
0091:  BTFSC  27.4
0092:  GOTO   0B9
....................     { 
....................         cursory++; 
0093:  INCF   2F,F
....................         if (cursory > 2) 
0094:  MOVF   2F,W
0095:  SUBLW  02
0096:  BTFSC  03.0
0097:  GOTO   09E
....................         { 
....................             cursory = 0; 
0098:  CLRF   2F
....................             cursorx++; 
0099:  INCF   2E,F
....................             if (cursorx > 2) 
009A:  MOVF   2E,W
009B:  SUBLW  02
009C:  BTFSS  03.0
....................             { 
....................                 cursorx = 0; 
009D:  CLRF   2E
....................             } 
....................         } 
....................  
....................         if (tabuleiro[cursorx][cursory] == -1) 
009E:  MOVF   2E,W
009F:  MOVWF  43
00A0:  MOVLW  03
00A1:  MOVWF  44
00A2:  CALL   040
00A3:  MOVF   2F,W
00A4:  ADDWF  78,W
00A5:  ADDLW  37
00A6:  MOVWF  04
00A7:  BCF    03.7
00A8:  MOVF   00,W
00A9:  SUBLW  FF
00AA:  BTFSS  03.2
00AB:  GOTO   0B8
....................         { 
....................             tabuleiro[cursorx][cursory] = 0; 
00AC:  MOVF   2E,W
00AD:  MOVWF  43
00AE:  MOVLW  03
00AF:  MOVWF  44
00B0:  CALL   040
00B1:  MOVF   2F,W
00B2:  ADDWF  78,W
00B3:  ADDLW  37
00B4:  MOVWF  04
00B5:  BCF    03.7
00B6:  CLRF   00
....................             isMovido = 1; 
00B7:  BSF    27.4
....................         } 
00B8:  GOTO   091
....................     } 
00B9:  BCF    0A.3
00BA:  BCF    0A.4
00BB:  GOTO   301 (RETURN)
.................... } 
....................  
.................... int8 verifica_ganhador(int8 matriz[3][3]) 
.................... { 
....................     for (i = 0; i < 3; i++) 
*
0178:  CLRF   2A
0179:  MOVF   2A,W
017A:  SUBLW  02
017B:  BTFSS  03.0
017C:  GOTO   20F
....................     { 
....................         if (matriz[i][0] != -1 && matriz[i][0] == matriz[i][1] && matriz[i][0] == matriz[i][2]) 
017D:  MOVF   2A,W
017E:  MOVWF  43
017F:  MOVLW  03
0180:  MOVWF  44
0181:  CALL   040
0182:  MOVF   78,W
0183:  ADDWF  40,W
0184:  MOVWF  04
0185:  BCF    03.7
0186:  BTFSC  41.0
0187:  BSF    03.7
0188:  MOVF   00,W
0189:  SUBLW  FF
018A:  BTFSC  03.2
018B:  GOTO   1D4
018C:  MOVF   2A,W
018D:  MOVWF  43
018E:  MOVLW  03
018F:  MOVWF  44
0190:  CALL   040
0191:  MOVF   78,W
0192:  ADDWF  40,W
0193:  MOVWF  04
0194:  BCF    03.7
0195:  BTFSC  41.0
0196:  BSF    03.7
0197:  MOVF   00,W
0198:  MOVWF  42
0199:  MOVF   2A,W
019A:  MOVWF  43
019B:  MOVLW  03
019C:  MOVWF  44
019D:  CALL   040
019E:  MOVLW  01
019F:  ADDWF  78,W
01A0:  ADDWF  40,W
01A1:  MOVWF  04
01A2:  BCF    03.7
01A3:  BTFSC  41.0
01A4:  BSF    03.7
01A5:  MOVF   00,W
01A6:  SUBWF  42,W
01A7:  BTFSS  03.2
01A8:  GOTO   1D4
01A9:  MOVF   2A,W
01AA:  MOVWF  43
01AB:  MOVLW  03
01AC:  MOVWF  44
01AD:  CALL   040
01AE:  MOVF   78,W
01AF:  ADDWF  40,W
01B0:  MOVWF  04
01B1:  BCF    03.7
01B2:  BTFSC  41.0
01B3:  BSF    03.7
01B4:  MOVF   00,W
01B5:  MOVWF  42
01B6:  MOVF   2A,W
01B7:  MOVWF  43
01B8:  MOVLW  03
01B9:  MOVWF  44
01BA:  CALL   040
01BB:  MOVLW  02
01BC:  ADDWF  78,W
01BD:  ADDWF  40,W
01BE:  MOVWF  04
01BF:  BCF    03.7
01C0:  BTFSC  41.0
01C1:  BSF    03.7
01C2:  MOVF   00,W
01C3:  SUBWF  42,W
01C4:  BTFSS  03.2
01C5:  GOTO   1D4
....................             return matriz[i][0]; 
01C6:  MOVF   2A,W
01C7:  MOVWF  43
01C8:  MOVLW  03
01C9:  MOVWF  44
01CA:  CALL   040
01CB:  MOVF   78,W
01CC:  ADDWF  40,W
01CD:  MOVWF  04
01CE:  BCF    03.7
01CF:  BTFSC  41.0
01D0:  BSF    03.7
01D1:  MOVF   00,W
01D2:  MOVWF  78
01D3:  GOTO   2AF
....................  
....................         if (matriz[0][i] != -1 && matriz[0][i] == matriz[1][i] && matriz[0][i] == matriz[2][i]) 
01D4:  MOVF   2A,W
01D5:  ADDWF  40,W
01D6:  MOVWF  04
01D7:  BCF    03.7
01D8:  BTFSC  41.0
01D9:  BSF    03.7
01DA:  MOVF   00,W
01DB:  SUBLW  FF
01DC:  BTFSC  03.2
01DD:  GOTO   20D
01DE:  MOVF   2A,W
01DF:  ADDWF  40,W
01E0:  MOVWF  04
01E1:  BCF    03.7
01E2:  BTFSC  41.0
01E3:  BSF    03.7
01E4:  MOVF   00,W
01E5:  MOVWF  42
01E6:  MOVLW  03
01E7:  ADDWF  2A,W
01E8:  ADDWF  40,W
01E9:  MOVWF  04
01EA:  BCF    03.7
01EB:  BTFSC  41.0
01EC:  BSF    03.7
01ED:  MOVF   00,W
01EE:  SUBWF  42,W
01EF:  BTFSS  03.2
01F0:  GOTO   20D
01F1:  MOVF   2A,W
01F2:  ADDWF  40,W
01F3:  MOVWF  04
01F4:  BCF    03.7
01F5:  BTFSC  41.0
01F6:  BSF    03.7
01F7:  MOVF   00,W
01F8:  MOVWF  42
01F9:  MOVLW  06
01FA:  ADDWF  2A,W
01FB:  ADDWF  40,W
01FC:  MOVWF  04
01FD:  BCF    03.7
01FE:  BTFSC  41.0
01FF:  BSF    03.7
0200:  MOVF   00,W
0201:  SUBWF  42,W
0202:  BTFSS  03.2
0203:  GOTO   20D
....................             return matriz[0][i]; 
0204:  MOVF   2A,W
0205:  ADDWF  40,W
0206:  MOVWF  04
0207:  BCF    03.7
0208:  BTFSC  41.0
0209:  BSF    03.7
020A:  MOVF   00,W
020B:  MOVWF  78
020C:  GOTO   2AF
020D:  INCF   2A,F
020E:  GOTO   179
....................     } 
....................  
....................     if (matriz[0][0] != -1 && matriz[0][0] == matriz[1][1] && matriz[0][0] == matriz[2][2]) 
020F:  MOVF   40,W
0210:  MOVWF  04
0211:  BCF    03.7
0212:  BTFSC  41.0
0213:  BSF    03.7
0214:  MOVF   00,W
0215:  SUBLW  FF
0216:  BTFSC  03.2
0217:  GOTO   243
0218:  MOVF   40,W
0219:  MOVWF  04
021A:  BCF    03.7
021B:  BTFSC  41.0
021C:  BSF    03.7
021D:  MOVF   00,W
021E:  MOVWF  42
021F:  MOVLW  04
0220:  ADDWF  40,W
0221:  MOVWF  04
0222:  BCF    03.7
0223:  BTFSC  41.0
0224:  BSF    03.7
0225:  MOVF   00,W
0226:  SUBWF  42,W
0227:  BTFSS  03.2
0228:  GOTO   243
0229:  MOVF   40,W
022A:  MOVWF  04
022B:  BCF    03.7
022C:  BTFSC  41.0
022D:  BSF    03.7
022E:  MOVF   00,W
022F:  MOVWF  42
0230:  MOVLW  08
0231:  ADDWF  40,W
0232:  MOVWF  04
0233:  BCF    03.7
0234:  BTFSC  41.0
0235:  BSF    03.7
0236:  MOVF   00,W
0237:  SUBWF  42,W
0238:  BTFSS  03.2
0239:  GOTO   243
....................         return matriz[0][0]; 
023A:  MOVF   40,W
023B:  MOVWF  04
023C:  BCF    03.7
023D:  BTFSC  41.0
023E:  BSF    03.7
023F:  MOVF   00,W
0240:  MOVWF  78
0241:  GOTO   2AF
0242:  GOTO   2AF
....................  
....................     else if (matriz[0][2] != -1 && matriz[0][2] == matriz[1][1] && matriz[0][2] == matriz[2][0]) 
0243:  MOVLW  02
0244:  ADDWF  40,W
0245:  MOVWF  04
0246:  BCF    03.7
0247:  BTFSC  41.0
0248:  BSF    03.7
0249:  MOVF   00,W
024A:  SUBLW  FF
024B:  BTFSC  03.2
024C:  GOTO   27B
024D:  MOVLW  02
024E:  ADDWF  40,W
024F:  MOVWF  04
0250:  BCF    03.7
0251:  BTFSC  41.0
0252:  BSF    03.7
0253:  MOVF   00,W
0254:  MOVWF  42
0255:  MOVLW  04
0256:  ADDWF  40,W
0257:  MOVWF  04
0258:  BCF    03.7
0259:  BTFSC  41.0
025A:  BSF    03.7
025B:  MOVF   00,W
025C:  SUBWF  42,W
025D:  BTFSS  03.2
025E:  GOTO   27B
025F:  MOVLW  02
0260:  ADDWF  40,W
0261:  MOVWF  04
0262:  BCF    03.7
0263:  BTFSC  41.0
0264:  BSF    03.7
0265:  MOVF   00,W
0266:  MOVWF  42
0267:  MOVLW  06
0268:  ADDWF  40,W
0269:  MOVWF  04
026A:  BCF    03.7
026B:  BTFSC  41.0
026C:  BSF    03.7
026D:  MOVF   00,W
026E:  SUBWF  42,W
026F:  BTFSS  03.2
0270:  GOTO   27B
....................         return matriz[0][2]; 
0271:  MOVLW  02
0272:  ADDWF  40,W
0273:  MOVWF  04
0274:  BCF    03.7
0275:  BTFSC  41.0
0276:  BSF    03.7
0277:  MOVF   00,W
0278:  MOVWF  78
0279:  GOTO   2AF
027A:  GOTO   2AF
....................  
....................     else 
....................     { 
....................         contvelha = 0; 
027B:  CLRF   36
....................  
....................         for (i = 0; i < 3; i++) 
027C:  CLRF   2A
027D:  MOVF   2A,W
027E:  SUBLW  02
027F:  BTFSS  03.0
0280:  GOTO   2A5
....................         { 
....................             for (j = 0; j < 3; j++) 
0281:  CLRF   2B
0282:  MOVF   2B,W
0283:  SUBLW  02
0284:  BTFSS  03.0
0285:  GOTO   2A3
....................             { 
....................                 if (tabuleiro[i][j] != -1 && tabuleiro[i][j] != 0) 
0286:  MOVF   2A,W
0287:  MOVWF  43
0288:  MOVLW  03
0289:  MOVWF  44
028A:  CALL   040
028B:  MOVF   2B,W
028C:  ADDWF  78,W
028D:  ADDLW  37
028E:  MOVWF  04
028F:  BCF    03.7
0290:  MOVF   00,W
0291:  SUBLW  FF
0292:  BTFSC  03.2
0293:  GOTO   2A1
0294:  MOVF   2A,W
0295:  MOVWF  43
0296:  MOVLW  03
0297:  MOVWF  44
0298:  CALL   040
0299:  MOVF   2B,W
029A:  ADDWF  78,W
029B:  ADDLW  37
029C:  MOVWF  04
029D:  BCF    03.7
029E:  MOVF   00,F
029F:  BTFSS  03.2
....................                 { 
....................  
....................                     contvelha++; 
02A0:  INCF   36,F
....................                 } 
02A1:  INCF   2B,F
02A2:  GOTO   282
....................             } 
02A3:  INCF   2A,F
02A4:  GOTO   27D
....................         } 
....................  
....................         if (contvelha == 9) 
02A5:  MOVF   36,W
02A6:  SUBLW  09
02A7:  BTFSS  03.2
02A8:  GOTO   2AD
....................             return 3; 
02A9:  MOVLW  03
02AA:  MOVWF  78
02AB:  GOTO   2AF
02AC:  GOTO   2AF
....................  
....................         else 
....................             return 0; 
02AD:  MOVLW  00
02AE:  MOVWF  78
....................     } 
02AF:  BCF    0A.3
02B0:  BCF    0A.4
02B1:  GOTO   319 (RETURN)
.................... } 
....................  
.................... void zera_jogo() 
.................... { 
....................     reinicia_tabuleiro(); 
....................  
....................     fimtempo = 0; 
....................     tempo = 0; 
....................     i = j = x = y = cursorx = cursory = 0; 
....................     pontuacaoJ1 = pontuacaoJ2 = ganhador = contvelha = 0; 
.................... } 

Configuration Fuses:
   Word  1: 2CC2   HS NOWDT PUT NOMCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
