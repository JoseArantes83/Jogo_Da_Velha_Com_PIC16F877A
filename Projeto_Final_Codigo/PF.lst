CCS PCM C Compiler, Version 5.076, 56587               26-jun-24 19:23

               Filename:   D:\Documentos\Faculdade\6o_Periodo\Microprocessadores_e_Microcontroladores\Projetos\C\Projeto Final\Jogo_Da_Velha_Com_PIC16F877A\Projeto_Final_Codigo\PF.lst

               ROM used:   422 words (5%)
                           Largest free fragment is 2048
               RAM used:   35 (10%) at main() level
                           36 (10%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   138
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <PF.h> 
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
*
0040:  CLRF   77
0041:  CLRF   78
0042:  MOVF   3D,W
0043:  BCF    03.0
0044:  BTFSC  3E.0
0045:  ADDWF  77,F
0046:  RRF    77,F
0047:  RRF    78,F
0048:  BTFSC  3E.1
0049:  ADDWF  77,F
004A:  RRF    77,F
004B:  RRF    78,F
004C:  BTFSC  3E.2
004D:  ADDWF  77,F
004E:  RRF    77,F
004F:  RRF    78,F
0050:  BTFSC  3E.3
0051:  ADDWF  77,F
0052:  RRF    77,F
0053:  RRF    78,F
0054:  BTFSC  3E.4
0055:  ADDWF  77,F
0056:  RRF    77,F
0057:  RRF    78,F
0058:  BTFSC  3E.5
0059:  ADDWF  77,F
005A:  RRF    77,F
005B:  RRF    78,F
005C:  BTFSC  3E.6
005D:  ADDWF  77,F
005E:  RRF    77,F
005F:  RRF    78,F
0060:  BTFSC  3E.7
0061:  ADDWF  77,F
0062:  RRF    77,F
0063:  RRF    78,F
0064:  RETURN
....................  
.................... #list 
....................  
.................... #device ADC = 10 
....................  
.................... #FUSES PUT        // Power Up Timer 
.................... #FUSES NOMCLR     // Master Clear pin used for I/O 
.................... #FUSES NOPROTECT  // Code not protected from reading 
.................... #FUSES NOCPD      // No EE protection 
.................... #FUSES NOBROWNOUT // No brownout reset 
.................... #FUSES IESO       // Internal External Switch Over mode enabled 
.................... #FUSES FCMEN      // Fail-safe clock monitor enabled 
.................... #FUSES NOLVP      // No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES BORV40     // Brownout reset at 4.0V 
.................... #FUSES NOWRT      // Program memory not write protected 
....................  
.................... #use delay(crystal = 8MHz) 
.................... #use FIXED_IO(A_outputs = PIN_A5) 
.................... #use FIXED_IO(B_outputs = PIN_B7, PIN_B6, PIN_B5, PIN_B4, PIN_B3, PIN_B2, PIN_B1, PIN_B0) 
.................... #use FIXED_IO(C_outputs = PIN_C7, PIN_C6, PIN_C5, PIN_C4, PIN_C3, PIN_C2, PIN_C1, PIN_C0) 
.................... #use FIXED_IO(D_outputs = PIN_D7, PIN_D6, PIN_D5, PIN_D4, PIN_D3, PIN_D2, PIN_D1, PIN_D0) 
.................... #use FIXED_IO(E_outputs = PIN_E0) 
.................... #define B_CONFIRM PIN_A0 
.................... #define B_MOVE PIN_A1 
.................... #define B_RESET PIN_A2 
.................... #define RED1 PIN_A5 
.................... #define RED2 PIN_B0 
.................... #define RED3 PIN_B1 
.................... #define GREEN1 PIN_B2 
.................... #define GREEN2 PIN_B3 
.................... #define GREEN3 PIN_B4 
.................... #define LIN1 PIN_B5 
.................... #define LIN2 PIN_B6 
.................... #define LIN3 PIN_B7 
.................... #define GND PIN_E0 
.................... #define A1 PIN_C0 
.................... #define A2 PIN_C1 
.................... #define A3 PIN_C2 
.................... #define A4 PIN_C3 
.................... #define A5 PIN_C4 
.................... #define A6 PIN_C5 
.................... #define A7 PIN_C6 
.................... #define A8 PIN_C7 
.................... #define B1 PIN_D0 
.................... #define B2 PIN_D1 
.................... #define B3 PIN_D2 
.................... #define B4 PIN_D3 
.................... #define B5 PIN_D4 
.................... #define B6 PIN_D5 
.................... #define B7 PIN_D6 
.................... #define B8 PIN_D7 
....................  
....................  
.................... int1 fimtempo = 0, ja_li_reset = 0, ja_li_mov = 0, ja_li_conf = 0; 
.................... int16 tempo = 0; 
.................... int8 i = 0, j = 0, x = 0, y = 0, filtro_reset = 100, filtro_mov = 100, filtro_conf = 100; 
.................... int8 pontuacaoJ1 = 0, pontuacaoJ2 = 0, ganhador = 0; 
.................... int8 tabuleiro[3][3]; 
....................  
.................... void reinicia_tabuleiro(); 
.................... void acende_tabuleiro(); 
.................... int8 verifica_ganhador(int8 *); 
....................  
.................... #INT_TIMER0 
.................... void TIMER0_isr(void) 
.................... { 
.................... 	tempo++; 
*
002F:  INCF   28,F
0030:  BTFSC  03.2
0031:  INCF   29,F
....................  
.................... 	if (tempo == 50) 
0032:  MOVF   28,W
0033:  SUBLW  32
0034:  BTFSS  03.2
0035:  GOTO   03C
0036:  MOVF   29,F
0037:  BTFSS  03.2
0038:  GOTO   03C
.................... 	{ 
.................... 		tempo = 0; 
0039:  CLRF   29
003A:  CLRF   28
.................... 		fimtempo = 1; 
003B:  BSF    27.0
.................... 	} 
003C:  BCF    0B.2
003D:  BCF    0A.3
003E:  BCF    0A.4
003F:  GOTO   01B
.................... } 
....................  
.................... void main() 
*
0138:  MOVF   03,W
0139:  ANDLW  1F
013A:  MOVWF  03
013B:  BCF    27.0
013C:  BCF    27.1
013D:  BCF    27.2
013E:  BCF    27.3
013F:  CLRF   29
0140:  CLRF   28
0141:  CLRF   2A
0142:  CLRF   2B
0143:  CLRF   2C
0144:  CLRF   2D
0145:  MOVLW  64
0146:  MOVWF  2E
0147:  MOVWF  2F
0148:  MOVWF  30
0149:  CLRF   31
014A:  CLRF   32
014B:  CLRF   33
014C:  BSF    03.5
014D:  BSF    03.6
014E:  MOVF   09,W
014F:  ANDLW  C0
0150:  MOVWF  09
0151:  BCF    03.6
0152:  BCF    1F.4
0153:  BCF    1F.5
0154:  MOVLW  00
0155:  BSF    03.6
0156:  MOVWF  08
0157:  BCF    03.5
0158:  CLRF   07
0159:  CLRF   08
015A:  CLRF   09
015B:  BCF    03.7
.................... { 
.................... 	setup_timer_0(RTCC_INTERNAL | RTCC_DIV_8 | RTCC_8_BIT); // 1, 0 ms overflow 
015C:  BSF    03.5
015D:  BCF    03.6
015E:  MOVF   01,W
015F:  ANDLW  C0
0160:  IORLW  02
0161:  MOVWF  01
.................... 	enable_interrupts(INT_TIMER0); 
0162:  BCF    03.5
0163:  BSF    0B.5
.................... 	enable_interrupts(GLOBAL); 
0164:  MOVLW  C0
0165:  IORWF  0B,F
....................  
.................... 	reinicia_tabuleiro(); 
0166:  CALL   065
....................  
.................... 	//!   tabuleiro[0][0] = 1; 
.................... 	//!   tabuleiro[0][1] = 2; 
.................... 	//!   tabuleiro[0][2] = 0; 
.................... 	//!   tabuleiro[1][0] = 1; 
.................... 	//!   tabuleiro[1][1] = 2; 
.................... 	//!   tabuleiro[1][2] = 0; 
.................... 	//!   tabuleiro[2][0] = 1; 
.................... 	//!   tabuleiro[2][1] = 2; 
.................... 	//!   tabuleiro[2][2] = 0; 
....................  
.................... 	while (TRUE) 
.................... 	{ 
.................... 		if (input(B_RESET) == 0) 
0167:  MOVLW  DF
0168:  BSF    03.5
0169:  MOVWF  05
016A:  BCF    03.5
016B:  BTFSC  05.2
016C:  GOTO   174
.................... 		{ 
.................... 			filtro_reset--; 
016D:  DECFSZ 2E,F
.................... 			if(filtro_reset == 0 && ja_li_reset == 0){ 
016E:  GOTO   173
016F:  BTFSC  27.1
0170:  GOTO   173
.................... 				ja_li_reset = 1; 
0171:  BSF    27.1
.................... 				reinicia_tabuleiro(); 
0172:  CALL   065
.................... 			} 
.................... 		}else{ 
0173:  GOTO   177
.................... 			ja_li_reset = 0; 
0174:  BCF    27.1
.................... 			filtro_reset = 100; 
0175:  MOVLW  64
0176:  MOVWF  2E
.................... 		} 
....................  
.................... 		if (input(B_MOVE) == 0) 
0177:  MOVLW  DF
0178:  BSF    03.5
0179:  MOVWF  05
017A:  BCF    03.5
017B:  BTFSC  05.1
017C:  GOTO   182
.................... 		{ 
.................... 			filtro_mov--; 
017D:  DECFSZ 2F,F
.................... 			if (filtro_mov == 0 && ja_li_mov == 0) 
017E:  GOTO   181
017F:  BTFSS  27.2
.................... 			{ 
.................... 				ja_li_mov = 1; 
0180:  BSF    27.2
.................... 				// executar função move_cursor() 
.................... 			} 
.................... 		} 
0181:  GOTO   185
.................... 		else 
.................... 		{ 
.................... 			ja_li_mov = 0; 
0182:  BCF    27.2
.................... 			filtro_mov = 100; 
0183:  MOVLW  64
0184:  MOVWF  2F
.................... 		} 
....................  
.................... 		if (input(B_CONFIRM) == 0) 
0185:  MOVLW  DF
0186:  BSF    03.5
0187:  MOVWF  05
0188:  BCF    03.5
0189:  BTFSC  05.0
018A:  GOTO   190
.................... 		{ 
.................... 			filtro_conf--; 
018B:  DECFSZ 30,F
.................... 			if (filtro_conf == 0 && ja_li_conf == 0) 
018C:  GOTO   18F
018D:  BTFSS  27.3
.................... 			{ 
.................... 				ja_li_conf = 1; 
018E:  BSF    27.3
.................... 				// executar função confirma_acao() 
.................... 			} 
.................... 		} 
018F:  GOTO   193
.................... 		else 
.................... 		{ 
.................... 			ja_li_conf = 0; 
0190:  BCF    27.3
.................... 			filtro_conf = 100; 
0191:  MOVLW  64
0192:  MOVWF  30
.................... 		} 
....................  
.................... 		if (fimtempo) 
0193:  BTFSS  27.0
0194:  GOTO   1A4
.................... 		{ 
.................... 			acende_tabuleiro(); 
0195:  GOTO   080
....................  
.................... 			y += 1; 
0196:  MOVLW  01
0197:  ADDWF  2D,F
....................  
.................... 			if (y == 3) 
0198:  MOVF   2D,W
0199:  SUBLW  03
019A:  BTFSS  03.2
019B:  GOTO   1A3
.................... 			{ 
.................... 				x += 1; 
019C:  MOVLW  01
019D:  ADDWF  2C,F
.................... 				y = 0; 
019E:  CLRF   2D
....................  
.................... 				if (x == 3) 
019F:  MOVF   2C,W
01A0:  SUBLW  03
01A1:  BTFSC  03.2
.................... 				{ 
.................... 					x = 0; 
01A2:  CLRF   2C
.................... 				} 
.................... 			} 
....................  
.................... 			fimtempo = 0; 
01A3:  BCF    27.0
.................... 		} 
01A4:  GOTO   167
.................... 	} 
.................... } 
....................  
01A5:  SLEEP
.................... void reinicia_tabuleiro() 
.................... { 
.................... 	for (i = 0; i < 3; i++) 
*
0065:  CLRF   2A
0066:  MOVF   2A,W
0067:  SUBLW  02
0068:  BTFSS  03.0
0069:  GOTO   07F
.................... 	{ 
.................... 		for (j = 0; j < 3; j++) 
006A:  CLRF   2B
006B:  MOVF   2B,W
006C:  SUBLW  02
006D:  BTFSS  03.0
006E:  GOTO   07D
.................... 		{ 
.................... 			tabuleiro[i][j] = -1; 
006F:  MOVF   2A,W
0070:  MOVWF  3D
0071:  MOVLW  03
0072:  MOVWF  3E
0073:  CALL   040
0074:  MOVF   2B,W
0075:  ADDWF  78,W
0076:  ADDLW  34
0077:  MOVWF  04
0078:  BCF    03.7
0079:  MOVLW  FF
007A:  MOVWF  00
007B:  INCF   2B,F
007C:  GOTO   06B
.................... 		} 
007D:  INCF   2A,F
007E:  GOTO   066
.................... 	} 
007F:  RETURN
.................... } 
....................  
.................... void acende_tabuleiro() 
.................... { 
.................... 	output_high(LIN1); 
0080:  MOVLW  00
0081:  BSF    03.5
0082:  MOVWF  06
0083:  BCF    03.5
0084:  BSF    06.5
.................... 	output_high(LIN2); 
0085:  BSF    03.5
0086:  MOVWF  06
0087:  BCF    03.5
0088:  BSF    06.6
.................... 	output_high(LIN3); 
0089:  BSF    03.5
008A:  MOVWF  06
008B:  BCF    03.5
008C:  BSF    06.7
.................... 	output_low(RED1); 
008D:  MOVLW  DF
008E:  BSF    03.5
008F:  MOVWF  05
0090:  BCF    03.5
0091:  BCF    05.5
.................... 	output_low(RED2); 
0092:  MOVLW  00
0093:  BSF    03.5
0094:  MOVWF  06
0095:  BCF    03.5
0096:  BCF    06.0
.................... 	output_low(RED3); 
0097:  BSF    03.5
0098:  MOVWF  06
0099:  BCF    03.5
009A:  BCF    06.1
.................... 	output_low(GREEN1); 
009B:  BSF    03.5
009C:  MOVWF  06
009D:  BCF    03.5
009E:  BCF    06.2
.................... 	output_low(GREEN2); 
009F:  BSF    03.5
00A0:  MOVWF  06
00A1:  BCF    03.5
00A2:  BCF    06.3
.................... 	output_low(GREEN3); 
00A3:  BSF    03.5
00A4:  MOVWF  06
00A5:  BCF    03.5
00A6:  BCF    06.4
....................  
.................... 	if (x == 0) 
00A7:  MOVF   2C,F
00A8:  BTFSS  03.2
00A9:  GOTO   0B0
.................... 	{ 
.................... 		output_low(LIN1); 
00AA:  MOVLW  00
00AB:  BSF    03.5
00AC:  MOVWF  06
00AD:  BCF    03.5
00AE:  BCF    06.5
.................... 	} 
00AF:  GOTO   0BD
.................... 	else if (x == 1) 
00B0:  DECFSZ 2C,W
00B1:  GOTO   0B8
.................... 	{ 
.................... 		output_low(LIN2); 
00B2:  MOVLW  00
00B3:  BSF    03.5
00B4:  MOVWF  06
00B5:  BCF    03.5
00B6:  BCF    06.6
.................... 	} 
00B7:  GOTO   0BD
.................... 	else 
.................... 	{ 
.................... 		output_low(LIN3); 
00B8:  MOVLW  00
00B9:  BSF    03.5
00BA:  MOVWF  06
00BB:  BCF    03.5
00BC:  BCF    06.7
.................... 	} 
....................  
.................... 	if (tabuleiro[x][y] == 1) 
00BD:  MOVF   2C,W
00BE:  MOVWF  3D
00BF:  MOVLW  03
00C0:  MOVWF  3E
00C1:  CALL   040
00C2:  MOVF   2D,W
00C3:  ADDWF  78,W
00C4:  ADDLW  34
00C5:  MOVWF  04
00C6:  BCF    03.7
00C7:  DECFSZ 00,W
00C8:  GOTO   0E0
.................... 	{ 
.................... 		if (y == 0) 
00C9:  MOVF   2D,F
00CA:  BTFSS  03.2
00CB:  GOTO   0D2
.................... 		{ 
.................... 			output_high(RED1); 
00CC:  MOVLW  DF
00CD:  BSF    03.5
00CE:  MOVWF  05
00CF:  BCF    03.5
00D0:  BSF    05.5
.................... 		} 
00D1:  GOTO   0DF
.................... 		else if (y == 1) 
00D2:  DECFSZ 2D,W
00D3:  GOTO   0DA
.................... 		{ 
.................... 			output_high(RED2); 
00D4:  MOVLW  00
00D5:  BSF    03.5
00D6:  MOVWF  06
00D7:  BCF    03.5
00D8:  BSF    06.0
.................... 		} 
00D9:  GOTO   0DF
.................... 		else 
.................... 		{ 
.................... 			output_high(RED3); 
00DA:  MOVLW  00
00DB:  BSF    03.5
00DC:  MOVWF  06
00DD:  BCF    03.5
00DE:  BSF    06.1
.................... 		} 
.................... 	} 
00DF:  GOTO   135
.................... 	else if (tabuleiro[x][y] == 2) 
00E0:  MOVF   2C,W
00E1:  MOVWF  3D
00E2:  MOVLW  03
00E3:  MOVWF  3E
00E4:  CALL   040
00E5:  MOVF   2D,W
00E6:  ADDWF  78,W
00E7:  ADDLW  34
00E8:  MOVWF  04
00E9:  BCF    03.7
00EA:  MOVF   00,W
00EB:  SUBLW  02
00EC:  BTFSS  03.2
00ED:  GOTO   105
.................... 	{ 
.................... 		if (y == 0) 
00EE:  MOVF   2D,F
00EF:  BTFSS  03.2
00F0:  GOTO   0F7
.................... 		{ 
.................... 			output_high(GREEN1); 
00F1:  MOVLW  00
00F2:  BSF    03.5
00F3:  MOVWF  06
00F4:  BCF    03.5
00F5:  BSF    06.2
.................... 		} 
00F6:  GOTO   104
.................... 		else if (y == 1) 
00F7:  DECFSZ 2D,W
00F8:  GOTO   0FF
.................... 		{ 
.................... 			output_high(GREEN2); 
00F9:  MOVLW  00
00FA:  BSF    03.5
00FB:  MOVWF  06
00FC:  BCF    03.5
00FD:  BSF    06.3
.................... 		} 
00FE:  GOTO   104
.................... 		else 
.................... 		{ 
.................... 			output_high(GREEN3); 
00FF:  MOVLW  00
0100:  BSF    03.5
0101:  MOVWF  06
0102:  BCF    03.5
0103:  BSF    06.4
.................... 		} 
.................... 	} 
0104:  GOTO   135
.................... 	else if (tabuleiro[x][y] == 0) 
0105:  MOVF   2C,W
0106:  MOVWF  3D
0107:  MOVLW  03
0108:  MOVWF  3E
0109:  CALL   040
010A:  MOVF   2D,W
010B:  ADDWF  78,W
010C:  ADDLW  34
010D:  MOVWF  04
010E:  BCF    03.7
010F:  MOVF   00,F
0110:  BTFSS  03.2
0111:  GOTO   135
.................... 	{ 
.................... 		if (y == 0) 
0112:  MOVF   2D,F
0113:  BTFSS  03.2
0114:  GOTO   120
.................... 		{ 
.................... 			output_high(RED1); 
0115:  MOVLW  DF
0116:  BSF    03.5
0117:  MOVWF  05
0118:  BCF    03.5
0119:  BSF    05.5
.................... 			output_high(GREEN1); 
011A:  MOVLW  00
011B:  BSF    03.5
011C:  MOVWF  06
011D:  BCF    03.5
011E:  BSF    06.2
.................... 		} 
011F:  GOTO   135
.................... 		else if (y == 1) 
0120:  DECFSZ 2D,W
0121:  GOTO   12C
.................... 		{ 
.................... 			output_high(RED2); 
0122:  MOVLW  00
0123:  BSF    03.5
0124:  MOVWF  06
0125:  BCF    03.5
0126:  BSF    06.0
.................... 			output_high(GREEN2); 
0127:  BSF    03.5
0128:  MOVWF  06
0129:  BCF    03.5
012A:  BSF    06.3
.................... 		} 
012B:  GOTO   135
.................... 		else 
.................... 		{ 
.................... 			output_high(RED3); 
012C:  MOVLW  00
012D:  BSF    03.5
012E:  MOVWF  06
012F:  BCF    03.5
0130:  BSF    06.1
.................... 			output_high(GREEN3); 
0131:  BSF    03.5
0132:  MOVWF  06
0133:  BCF    03.5
0134:  BSF    06.4
.................... 		} 
.................... 	} 
0135:  BCF    0A.3
0136:  BCF    0A.4
0137:  GOTO   196 (RETURN)
.................... } 
....................  
.................... int8 verifica_ganhador(int8 matriz[3][3]) 
.................... { 
.................... 	for (i = 0; i < 3; i++) 
.................... 	{ 
.................... 		if (matriz[i][0] != -1 && matriz[i][0] == matriz[i][1] && matriz[i][0] == matriz[i][2]) 
.................... 			return matriz[i][0]; 
.................... 		if (matriz[0][i] != -1 && matriz[0][i] == matriz[1][i] && matriz[0][i] == matriz[2][i]) 
.................... 			return matriz[0][i]; 
.................... 	} 
....................  
.................... 	if (matriz[0][0] != -1 && matriz[0][0] == matriz[1][1] && matriz[0][0] == matriz[2][2]) 
.................... 		return matriz[0][0]; 
.................... 	else if (matriz[0][2] != -1 && matriz[0][2] == matriz[1][1] && matriz[0][2] == matriz[2][0]) 
.................... 		return matriz[0][2]; 
.................... 	else 
.................... 		return 0; 
.................... } 

Configuration Fuses:
   Word  1: 2CC2   HS NOWDT PUT NOMCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
