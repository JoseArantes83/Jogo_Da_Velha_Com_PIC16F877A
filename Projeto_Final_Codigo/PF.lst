CCS PCM C Compiler, Version 5.076, 56587               26-jun-24 19:44

               Filename:   D:\Documentos\Faculdade\6o_Periodo\Microprocessadores_e_Microcontroladores\Projetos\C\Projeto Final\Jogo_Da_Velha_Com_PIC16F877A\Projeto_Final_Codigo\PF.lst

               ROM used:   649 words (8%)
                           Largest free fragment is 2048
               RAM used:   38 (10%) at main() level
                           39 (11%) worst case
               Stack used: 3 locations (2 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   209
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <PF.h> 
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
*
0040:  CLRF   77
0041:  CLRF   78
0042:  MOVF   40,W
0043:  BCF    03.0
0044:  BTFSC  41.0
0045:  ADDWF  77,F
0046:  RRF    77,F
0047:  RRF    78,F
0048:  BTFSC  41.1
0049:  ADDWF  77,F
004A:  RRF    77,F
004B:  RRF    78,F
004C:  BTFSC  41.2
004D:  ADDWF  77,F
004E:  RRF    77,F
004F:  RRF    78,F
0050:  BTFSC  41.3
0051:  ADDWF  77,F
0052:  RRF    77,F
0053:  RRF    78,F
0054:  BTFSC  41.4
0055:  ADDWF  77,F
0056:  RRF    77,F
0057:  RRF    78,F
0058:  BTFSC  41.5
0059:  ADDWF  77,F
005A:  RRF    77,F
005B:  RRF    78,F
005C:  BTFSC  41.6
005D:  ADDWF  77,F
005E:  RRF    77,F
005F:  RRF    78,F
0060:  BTFSC  41.7
0061:  ADDWF  77,F
0062:  RRF    77,F
0063:  RRF    78,F
0064:  RETURN
....................  
.................... #list 
....................  
.................... #device ADC = 10 
....................  
.................... #FUSES PUT        // Power Up Timer 
.................... #FUSES NOMCLR     // Master Clear pin used for I/O 
.................... #FUSES NOPROTECT  // Code not protected from reading 
.................... #FUSES NOCPD      // No EE protection 
.................... #FUSES NOBROWNOUT // No brownout reset 
.................... #FUSES IESO       // Internal External Switch Over mode enabled 
.................... #FUSES FCMEN      // Fail-safe clock monitor enabled 
.................... #FUSES NOLVP      // No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES BORV40     // Brownout reset at 4.0V 
.................... #FUSES NOWRT      // Program memory not write protected 
....................  
.................... #use delay(crystal = 8MHz) 
.................... #use FIXED_IO(A_outputs = PIN_A5) 
.................... #use FIXED_IO(B_outputs = PIN_B7, PIN_B6, PIN_B5, PIN_B4, PIN_B3, PIN_B2, PIN_B1, PIN_B0) 
.................... #use FIXED_IO(C_outputs = PIN_C7, PIN_C6, PIN_C5, PIN_C4, PIN_C3, PIN_C2, PIN_C1, PIN_C0) 
.................... #use FIXED_IO(D_outputs = PIN_D7, PIN_D6, PIN_D5, PIN_D4, PIN_D3, PIN_D2, PIN_D1, PIN_D0) 
.................... #use FIXED_IO(E_outputs = PIN_E0) 
.................... #define B_CONFIRM PIN_A0 
.................... #define B_MOVE PIN_A1 
.................... #define B_RESET PIN_A2 
.................... #define RED1 PIN_A5 
.................... #define RED2 PIN_B0 
.................... #define RED3 PIN_B1 
.................... #define GREEN1 PIN_B2 
.................... #define GREEN2 PIN_B3 
.................... #define GREEN3 PIN_B4 
.................... #define LIN1 PIN_B5 
.................... #define LIN2 PIN_B6 
.................... #define LIN3 PIN_B7 
.................... #define GND PIN_E0 
.................... #define A1 PIN_C0 
.................... #define A2 PIN_C1 
.................... #define A3 PIN_C2 
.................... #define A4 PIN_C3 
.................... #define A5 PIN_C4 
.................... #define A6 PIN_C5 
.................... #define A7 PIN_C6 
.................... #define A8 PIN_C7 
.................... #define B1 PIN_D0 
.................... #define B2 PIN_D1 
.................... #define B3 PIN_D2 
.................... #define B4 PIN_D3 
.................... #define B5 PIN_D4 
.................... #define B6 PIN_D5 
.................... #define B7 PIN_D6 
.................... #define B8 PIN_D7 
....................  
....................  
.................... int1 fimtempo = 0, ja_li_reset = 0, ja_li_mov = 0, ja_li_conf = 0; 
.................... int16 tempo = 0; 
.................... int8 i = 0, j = 0, x = 0, y = 0, cursorx = 0, cursory = 0, filtro_reset = 100, filtro_mov = 100, filtro_conf = 100; 
.................... int8 pontuacaoJ1 = 0, pontuacaoJ2 = 0, ganhador = 0, contvelha = 0; 
.................... int8 tabuleiro[3][3]; 
....................  
.................... void reinicia_tabuleiro(); 
.................... void acende_tabuleiro(); 
.................... void move_cursor(); 
.................... int8 verifica_ganhador(int8 matriz[3][3]); 
.................... void zera_jogo(); 
....................  
.................... #INT_TIMER0 
.................... void TIMER0_isr(VOID) 
.................... { 
.................... 	tempo++; 
*
002F:  INCF   28,F
0030:  BTFSC  03.2
0031:  INCF   29,F
....................  
.................... 	if (tempo == 50) 
0032:  MOVF   28,W
0033:  SUBLW  32
0034:  BTFSS  03.2
0035:  GOTO   03C
0036:  MOVF   29,F
0037:  BTFSS  03.2
0038:  GOTO   03C
.................... 	{ 
.................... 		tempo = 0; 
0039:  CLRF   29
003A:  CLRF   28
.................... 		fimtempo = 1; 
003B:  BSF    27.0
.................... 	} 
003C:  BCF    0B.2
003D:  BCF    0A.3
003E:  BCF    0A.4
003F:  GOTO   01B
.................... } 
....................  
.................... void main() 
*
0209:  MOVF   03,W
020A:  ANDLW  1F
020B:  MOVWF  03
020C:  BCF    27.0
020D:  BCF    27.1
020E:  BCF    27.2
020F:  BCF    27.3
0210:  CLRF   29
0211:  CLRF   28
0212:  CLRF   2A
0213:  CLRF   2B
0214:  CLRF   2C
0215:  CLRF   2D
0216:  CLRF   2E
0217:  CLRF   2F
0218:  MOVLW  64
0219:  MOVWF  30
021A:  MOVWF  31
021B:  MOVWF  32
021C:  CLRF   33
021D:  CLRF   34
021E:  CLRF   35
021F:  CLRF   36
0220:  BSF    03.5
0221:  BSF    03.6
0222:  MOVF   09,W
0223:  ANDLW  C0
0224:  MOVWF  09
0225:  BCF    03.6
0226:  BCF    1F.4
0227:  BCF    1F.5
0228:  MOVLW  00
0229:  BSF    03.6
022A:  MOVWF  08
022B:  BCF    03.5
022C:  CLRF   07
022D:  CLRF   08
022E:  CLRF   09
022F:  BCF    03.7
.................... { 
.................... 	setup_timer_0(RTCC_INTERNAL | RTCC_DIV_8 | RTCC_8_BIT); // 1, 0 ms overflow 
0230:  BSF    03.5
0231:  BCF    03.6
0232:  MOVF   01,W
0233:  ANDLW  C0
0234:  IORLW  02
0235:  MOVWF  01
.................... 	enable_interrupts(INT_TIMER0); 
0236:  BCF    03.5
0237:  BSF    0B.5
.................... 	enable_interrupts(GLOBAL); 
0238:  MOVLW  C0
0239:  IORWF  0B,F
....................  
.................... 	reinicia_tabuleiro(); 
023A:  CALL   065
....................  
.................... 	//!   tabuleiro[0][0] = 1; 
.................... 	//!   tabuleiro[0][1] = 2; 
.................... 	//!   tabuleiro[0][2] = 0; 
.................... 	//!   tabuleiro[1][0] = 1; 
.................... 	//!   tabuleiro[1][1] = 2; 
.................... 	//!   tabuleiro[1][2] = 0; 
.................... 	//!   tabuleiro[2][0] = 1; 
.................... 	//!   tabuleiro[2][1] = 2; 
.................... 	//!   tabuleiro[2][2] = 0; 
....................  
.................... 	while (TRUE) 
.................... 	{ 
.................... 		if (input(B_RESET) == 0) 
023B:  MOVLW  DF
023C:  BSF    03.5
023D:  MOVWF  05
023E:  BCF    03.5
023F:  BTFSC  05.2
0240:  GOTO   248
.................... 		{ 
.................... 			filtro_reset--; 
0241:  DECFSZ 30,F
.................... 			if (filtro_reset == 0 && ja_li_reset == 0) 
0242:  GOTO   247
0243:  BTFSC  27.1
0244:  GOTO   247
.................... 			{ 
.................... 				ja_li_reset = 1; 
0245:  BSF    27.1
.................... 				reinicia_tabuleiro(); 
0246:  CALL   065
.................... 			} 
.................... 		} 
0247:  GOTO   24B
.................... 		else 
.................... 		{ 
.................... 			ja_li_reset = 0; 
0248:  BCF    27.1
.................... 			filtro_reset = 100; 
0249:  MOVLW  64
024A:  MOVWF  30
.................... 		} 
....................  
.................... 		if (input(B_MOVE) == 0) 
024B:  MOVLW  DF
024C:  BSF    03.5
024D:  MOVWF  05
024E:  BCF    03.5
024F:  BTFSC  05.1
0250:  GOTO   258
.................... 		{ 
.................... 			filtro_mov--; 
0251:  DECFSZ 31,F
.................... 			if (filtro_mov == 0 && ja_li_mov == 0) 
0252:  GOTO   257
0253:  BTFSC  27.2
0254:  GOTO   257
.................... 			{ 
.................... 				ja_li_mov = 1; 
0255:  BSF    27.2
.................... 				move_cursor(); 
0256:  GOTO   084
.................... 			} 
.................... 		} 
0257:  GOTO   25B
.................... 		else 
.................... 		{ 
.................... 			ja_li_mov = 0; 
0258:  BCF    27.2
.................... 			filtro_mov = 100; 
0259:  MOVLW  64
025A:  MOVWF  31
.................... 		} 
....................  
.................... 		if (input(B_CONFIRM) == 0) 
025B:  MOVLW  DF
025C:  BSF    03.5
025D:  MOVWF  05
025E:  BCF    03.5
025F:  BTFSC  05.0
0260:  GOTO   266
.................... 		{ 
.................... 			filtro_conf--; 
0261:  DECFSZ 32,F
.................... 			if (filtro_conf == 0 && ja_li_conf == 0) 
0262:  GOTO   265
0263:  BTFSS  27.3
.................... 			{ 
.................... 				ja_li_conf = 1; 
0264:  BSF    27.3
.................... 				// executar função confirma_acao() 
.................... 			} 
.................... 		} 
0265:  GOTO   269
.................... 		else 
.................... 		{ 
.................... 			ja_li_conf = 0; 
0266:  BCF    27.3
.................... 			filtro_conf = 100; 
0267:  MOVLW  64
0268:  MOVWF  32
.................... 		} 
....................  
.................... 		if (fimtempo) 
0269:  BTFSS  27.0
026A:  GOTO   287
.................... 		{ 
.................... 			acende_tabuleiro(); 
026B:  GOTO   0C3
.................... 			y += 1; 
026C:  MOVLW  01
026D:  ADDWF  2D,F
.................... 			if (y == 3) 
026E:  MOVF   2D,W
026F:  SUBLW  03
0270:  BTFSS  03.2
0271:  GOTO   279
.................... 			{ 
.................... 				x += 1; 
0272:  MOVLW  01
0273:  ADDWF  2C,F
.................... 				y = 0; 
0274:  CLRF   2D
.................... 				if (x == 3) 
0275:  MOVF   2C,W
0276:  SUBLW  03
0277:  BTFSC  03.2
.................... 				{ 
.................... 					x = 0; 
0278:  CLRF   2C
.................... 				} 
.................... 			} 
....................  
.................... 			if (ganhador != 0) 
0279:  MOVF   35,F
027A:  BTFSC  03.2
027B:  GOTO   286
.................... 			{ 
....................  
.................... 				if (ganhador == 1) 
027C:  DECFSZ 35,W
027D:  GOTO   280
.................... 				{ 
....................  
.................... 					pontuacaoJ1++; 
027E:  INCF   33,F
.................... 				} 
027F:  GOTO   285
....................  
.................... 				else if (ganhador == 2) 
0280:  MOVF   35,W
0281:  SUBLW  02
0282:  BTFSS  03.2
0283:  GOTO   285
.................... 				{ 
....................  
.................... 					pontuacaoJ2++; 
0284:  INCF   34,F
.................... 				} 
....................  
.................... 				else 
.................... 				{ 
.................... 				} 
....................  
.................... 				reinicia_tabuleiro(); 
0285:  CALL   065
.................... 			} 
....................  
.................... 			fimtempo = 0; 
0286:  BCF    27.0
.................... 		} 
0287:  GOTO   23B
.................... 	} 
.................... } 
....................  
0288:  SLEEP
.................... void reinicia_tabuleiro() 
.................... { 
.................... 	for (i = 0; i < 3; i++) 
*
0065:  CLRF   2A
0066:  MOVF   2A,W
0067:  SUBLW  02
0068:  BTFSS  03.0
0069:  GOTO   07F
.................... 	{ 
.................... 		for (j = 0; j < 3; j++) 
006A:  CLRF   2B
006B:  MOVF   2B,W
006C:  SUBLW  02
006D:  BTFSS  03.0
006E:  GOTO   07D
.................... 		{ 
.................... 			tabuleiro[i][j] = -1; 
006F:  MOVF   2A,W
0070:  MOVWF  40
0071:  MOVLW  03
0072:  MOVWF  41
0073:  CALL   040
0074:  MOVF   2B,W
0075:  ADDWF  78,W
0076:  ADDLW  37
0077:  MOVWF  04
0078:  BCF    03.7
0079:  MOVLW  FF
007A:  MOVWF  00
007B:  INCF   2B,F
007C:  GOTO   06B
.................... 		} 
007D:  INCF   2A,F
007E:  GOTO   066
.................... 	} 
....................  
.................... 	tabuleiro[0][0] = 0; 
007F:  CLRF   37
.................... 	cursorx = cursory = 0; 
0080:  CLRF   2F
0081:  MOVF   2F,W
0082:  MOVWF  2E
0083:  RETURN
.................... } 
....................  
.................... void acende_tabuleiro() 
.................... { 
.................... 	output_high(LIN1); 
*
00C3:  MOVLW  00
00C4:  BSF    03.5
00C5:  MOVWF  06
00C6:  BCF    03.5
00C7:  BSF    06.5
.................... 	output_high(LIN2); 
00C8:  BSF    03.5
00C9:  MOVWF  06
00CA:  BCF    03.5
00CB:  BSF    06.6
.................... 	output_high(LIN3); 
00CC:  BSF    03.5
00CD:  MOVWF  06
00CE:  BCF    03.5
00CF:  BSF    06.7
.................... 	output_low(RED1); 
00D0:  MOVLW  DF
00D1:  BSF    03.5
00D2:  MOVWF  05
00D3:  BCF    03.5
00D4:  BCF    05.5
.................... 	output_low(RED2); 
00D5:  MOVLW  00
00D6:  BSF    03.5
00D7:  MOVWF  06
00D8:  BCF    03.5
00D9:  BCF    06.0
.................... 	output_low(RED3); 
00DA:  BSF    03.5
00DB:  MOVWF  06
00DC:  BCF    03.5
00DD:  BCF    06.1
.................... 	output_low(GREEN1); 
00DE:  BSF    03.5
00DF:  MOVWF  06
00E0:  BCF    03.5
00E1:  BCF    06.2
.................... 	output_low(GREEN2); 
00E2:  BSF    03.5
00E3:  MOVWF  06
00E4:  BCF    03.5
00E5:  BCF    06.3
.................... 	output_low(GREEN3); 
00E6:  BSF    03.5
00E7:  MOVWF  06
00E8:  BCF    03.5
00E9:  BCF    06.4
....................  
.................... 	if (x == 0) 
00EA:  MOVF   2C,F
00EB:  BTFSS  03.2
00EC:  GOTO   0F3
.................... 	{ 
.................... 		output_low(LIN1); 
00ED:  MOVLW  00
00EE:  BSF    03.5
00EF:  MOVWF  06
00F0:  BCF    03.5
00F1:  BCF    06.5
.................... 	} 
00F2:  GOTO   100
....................  
.................... 	else if (x == 1) 
00F3:  DECFSZ 2C,W
00F4:  GOTO   0FB
.................... 	{ 
.................... 		output_low(LIN2); 
00F5:  MOVLW  00
00F6:  BSF    03.5
00F7:  MOVWF  06
00F8:  BCF    03.5
00F9:  BCF    06.6
.................... 	} 
00FA:  GOTO   100
....................  
.................... 	else 
.................... 	{ 
.................... 		output_low(LIN3); 
00FB:  MOVLW  00
00FC:  BSF    03.5
00FD:  MOVWF  06
00FE:  BCF    03.5
00FF:  BCF    06.7
.................... 	} 
.................... 	if (x == 0) 
0100:  MOVF   2C,F
0101:  BTFSS  03.2
0102:  GOTO   109
.................... 	{ 
.................... 		output_low(LIN1); 
0103:  MOVLW  00
0104:  BSF    03.5
0105:  MOVWF  06
0106:  BCF    03.5
0107:  BCF    06.5
.................... 	} 
0108:  GOTO   116
.................... 	else if (x == 1) 
0109:  DECFSZ 2C,W
010A:  GOTO   111
.................... 	{ 
.................... 		output_low(LIN2); 
010B:  MOVLW  00
010C:  BSF    03.5
010D:  MOVWF  06
010E:  BCF    03.5
010F:  BCF    06.6
.................... 	} 
0110:  GOTO   116
.................... 	else 
.................... 	{ 
.................... 		output_low(LIN3); 
0111:  MOVLW  00
0112:  BSF    03.5
0113:  MOVWF  06
0114:  BCF    03.5
0115:  BCF    06.7
.................... 	} 
....................  
.................... 	if (tabuleiro[x][y] == 1) 
0116:  MOVF   2C,W
0117:  MOVWF  40
0118:  MOVLW  03
0119:  MOVWF  41
011A:  CALL   040
011B:  MOVF   2D,W
011C:  ADDWF  78,W
011D:  ADDLW  37
011E:  MOVWF  04
011F:  BCF    03.7
0120:  DECFSZ 00,W
0121:  GOTO   139
.................... 	{ 
.................... 		if (y == 0) 
0122:  MOVF   2D,F
0123:  BTFSS  03.2
0124:  GOTO   12B
.................... 		{ 
.................... 			output_high(RED1); 
0125:  MOVLW  DF
0126:  BSF    03.5
0127:  MOVWF  05
0128:  BCF    03.5
0129:  BSF    05.5
.................... 		} 
012A:  GOTO   138
.................... 		else if (y == 1) 
012B:  DECFSZ 2D,W
012C:  GOTO   133
.................... 		{ 
.................... 			output_high(RED2); 
012D:  MOVLW  00
012E:  BSF    03.5
012F:  MOVWF  06
0130:  BCF    03.5
0131:  BSF    06.0
.................... 		} 
0132:  GOTO   138
.................... 		else 
.................... 		{ 
.................... 			output_high(RED3); 
0133:  MOVLW  00
0134:  BSF    03.5
0135:  MOVWF  06
0136:  BCF    03.5
0137:  BSF    06.1
.................... 		} 
.................... 	} 
0138:  GOTO   18E
.................... 	else if (tabuleiro[x][y] == 2) 
0139:  MOVF   2C,W
013A:  MOVWF  40
013B:  MOVLW  03
013C:  MOVWF  41
013D:  CALL   040
013E:  MOVF   2D,W
013F:  ADDWF  78,W
0140:  ADDLW  37
0141:  MOVWF  04
0142:  BCF    03.7
0143:  MOVF   00,W
0144:  SUBLW  02
0145:  BTFSS  03.2
0146:  GOTO   15E
.................... 	{ 
.................... 		if (y == 0) 
0147:  MOVF   2D,F
0148:  BTFSS  03.2
0149:  GOTO   150
.................... 		{ 
.................... 			output_high(GREEN1); 
014A:  MOVLW  00
014B:  BSF    03.5
014C:  MOVWF  06
014D:  BCF    03.5
014E:  BSF    06.2
.................... 		} 
014F:  GOTO   15D
.................... 		else if (y == 1) 
0150:  DECFSZ 2D,W
0151:  GOTO   158
.................... 		{ 
.................... 			output_high(GREEN2); 
0152:  MOVLW  00
0153:  BSF    03.5
0154:  MOVWF  06
0155:  BCF    03.5
0156:  BSF    06.3
.................... 		} 
0157:  GOTO   15D
.................... 		else 
.................... 		{ 
.................... 			output_high(GREEN3); 
0158:  MOVLW  00
0159:  BSF    03.5
015A:  MOVWF  06
015B:  BCF    03.5
015C:  BSF    06.4
.................... 		} 
.................... 	} 
015D:  GOTO   18E
.................... 	else if (tabuleiro[x][y] == 0) 
015E:  MOVF   2C,W
015F:  MOVWF  40
0160:  MOVLW  03
0161:  MOVWF  41
0162:  CALL   040
0163:  MOVF   2D,W
0164:  ADDWF  78,W
0165:  ADDLW  37
0166:  MOVWF  04
0167:  BCF    03.7
0168:  MOVF   00,F
0169:  BTFSS  03.2
016A:  GOTO   18E
.................... 	{ 
.................... 		if (y == 0) 
016B:  MOVF   2D,F
016C:  BTFSS  03.2
016D:  GOTO   179
.................... 		{ 
.................... 			output_high(RED1); 
016E:  MOVLW  DF
016F:  BSF    03.5
0170:  MOVWF  05
0171:  BCF    03.5
0172:  BSF    05.5
.................... 			output_high(GREEN1); 
0173:  MOVLW  00
0174:  BSF    03.5
0175:  MOVWF  06
0176:  BCF    03.5
0177:  BSF    06.2
.................... 		} 
0178:  GOTO   18E
.................... 		else if (y == 1) 
0179:  DECFSZ 2D,W
017A:  GOTO   185
.................... 		{ 
.................... 			output_high(RED2); 
017B:  MOVLW  00
017C:  BSF    03.5
017D:  MOVWF  06
017E:  BCF    03.5
017F:  BSF    06.0
.................... 			output_high(GREEN2); 
0180:  BSF    03.5
0181:  MOVWF  06
0182:  BCF    03.5
0183:  BSF    06.3
.................... 		} 
0184:  GOTO   18E
.................... 		else 
.................... 		{ 
.................... 			output_high(RED3); 
0185:  MOVLW  00
0186:  BSF    03.5
0187:  MOVWF  06
0188:  BCF    03.5
0189:  BSF    06.1
.................... 			output_high(GREEN3); 
018A:  BSF    03.5
018B:  MOVWF  06
018C:  BCF    03.5
018D:  BSF    06.4
.................... 		} 
.................... 	} 
.................... 	if (tabuleiro[x][y] == 1) 
018E:  MOVF   2C,W
018F:  MOVWF  40
0190:  MOVLW  03
0191:  MOVWF  41
0192:  CALL   040
0193:  MOVF   2D,W
0194:  ADDWF  78,W
0195:  ADDLW  37
0196:  MOVWF  04
0197:  BCF    03.7
0198:  DECFSZ 00,W
0199:  GOTO   1B1
.................... 	{ 
.................... 		if (y == 0) 
019A:  MOVF   2D,F
019B:  BTFSS  03.2
019C:  GOTO   1A3
.................... 		{ 
.................... 			output_high(RED1); 
019D:  MOVLW  DF
019E:  BSF    03.5
019F:  MOVWF  05
01A0:  BCF    03.5
01A1:  BSF    05.5
.................... 		} 
01A2:  GOTO   1B0
....................  
.................... 		else if (y == 1) 
01A3:  DECFSZ 2D,W
01A4:  GOTO   1AB
.................... 		{ 
.................... 			output_high(RED2); 
01A5:  MOVLW  00
01A6:  BSF    03.5
01A7:  MOVWF  06
01A8:  BCF    03.5
01A9:  BSF    06.0
.................... 		} 
01AA:  GOTO   1B0
....................  
.................... 		else 
.................... 		{ 
.................... 			output_high(RED3); 
01AB:  MOVLW  00
01AC:  BSF    03.5
01AD:  MOVWF  06
01AE:  BCF    03.5
01AF:  BSF    06.1
.................... 		} 
.................... 	} 
01B0:  GOTO   206
....................  
.................... 	else if (tabuleiro[x][y] == 2) 
01B1:  MOVF   2C,W
01B2:  MOVWF  40
01B3:  MOVLW  03
01B4:  MOVWF  41
01B5:  CALL   040
01B6:  MOVF   2D,W
01B7:  ADDWF  78,W
01B8:  ADDLW  37
01B9:  MOVWF  04
01BA:  BCF    03.7
01BB:  MOVF   00,W
01BC:  SUBLW  02
01BD:  BTFSS  03.2
01BE:  GOTO   1D6
.................... 	{ 
.................... 		if (y == 0) 
01BF:  MOVF   2D,F
01C0:  BTFSS  03.2
01C1:  GOTO   1C8
.................... 		{ 
.................... 			output_high(GREEN1); 
01C2:  MOVLW  00
01C3:  BSF    03.5
01C4:  MOVWF  06
01C5:  BCF    03.5
01C6:  BSF    06.2
.................... 		} 
01C7:  GOTO   1D5
....................  
.................... 		else if (y == 1) 
01C8:  DECFSZ 2D,W
01C9:  GOTO   1D0
.................... 		{ 
.................... 			output_high(GREEN2); 
01CA:  MOVLW  00
01CB:  BSF    03.5
01CC:  MOVWF  06
01CD:  BCF    03.5
01CE:  BSF    06.3
.................... 		} 
01CF:  GOTO   1D5
....................  
.................... 		else 
.................... 		{ 
.................... 			output_high(GREEN3); 
01D0:  MOVLW  00
01D1:  BSF    03.5
01D2:  MOVWF  06
01D3:  BCF    03.5
01D4:  BSF    06.4
.................... 		} 
.................... 	} 
01D5:  GOTO   206
....................  
.................... 	else if (tabuleiro[x][y] == 0) 
01D6:  MOVF   2C,W
01D7:  MOVWF  40
01D8:  MOVLW  03
01D9:  MOVWF  41
01DA:  CALL   040
01DB:  MOVF   2D,W
01DC:  ADDWF  78,W
01DD:  ADDLW  37
01DE:  MOVWF  04
01DF:  BCF    03.7
01E0:  MOVF   00,F
01E1:  BTFSS  03.2
01E2:  GOTO   206
.................... 	{ 
.................... 		if (y == 0) 
01E3:  MOVF   2D,F
01E4:  BTFSS  03.2
01E5:  GOTO   1F1
.................... 		{ 
.................... 			output_high(RED1); 
01E6:  MOVLW  DF
01E7:  BSF    03.5
01E8:  MOVWF  05
01E9:  BCF    03.5
01EA:  BSF    05.5
.................... 			output_high(GREEN1); 
01EB:  MOVLW  00
01EC:  BSF    03.5
01ED:  MOVWF  06
01EE:  BCF    03.5
01EF:  BSF    06.2
.................... 		} 
01F0:  GOTO   206
....................  
.................... 		else if (y == 1) 
01F1:  DECFSZ 2D,W
01F2:  GOTO   1FD
.................... 		{ 
.................... 			output_high(RED2); 
01F3:  MOVLW  00
01F4:  BSF    03.5
01F5:  MOVWF  06
01F6:  BCF    03.5
01F7:  BSF    06.0
.................... 			output_high(GREEN2); 
01F8:  BSF    03.5
01F9:  MOVWF  06
01FA:  BCF    03.5
01FB:  BSF    06.3
.................... 		} 
01FC:  GOTO   206
....................  
.................... 		else 
.................... 		{ 
.................... 			output_high(RED3); 
01FD:  MOVLW  00
01FE:  BSF    03.5
01FF:  MOVWF  06
0200:  BCF    03.5
0201:  BSF    06.1
.................... 			output_high(GREEN3); 
0202:  BSF    03.5
0203:  MOVWF  06
0204:  BCF    03.5
0205:  BSF    06.4
.................... 		} 
.................... 	} 
0206:  BCF    0A.3
0207:  BCF    0A.4
0208:  GOTO   26C (RETURN)
.................... } 
....................  
.................... void move_cursor() 
.................... { 
.................... 	tabuleiro[cursorx][cursory] = -1; 
*
0084:  MOVF   2E,W
0085:  MOVWF  40
0086:  MOVLW  03
0087:  MOVWF  41
0088:  CALL   040
0089:  MOVF   2F,W
008A:  ADDWF  78,W
008B:  ADDLW  37
008C:  MOVWF  04
008D:  BCF    03.7
008E:  MOVLW  FF
008F:  MOVWF  00
.................... 	while (TRUE) 
.................... 	{ 
.................... 		cursory++; 
0090:  INCF   2F,F
.................... 		if (cursory > 2) 
0091:  MOVF   2F,W
0092:  SUBLW  02
0093:  BTFSC  03.0
0094:  GOTO   09B
.................... 		{ 
.................... 			cursory = 0; 
0095:  CLRF   2F
.................... 			cursorx++; 
0096:  INCF   2E,F
.................... 			if (cursorx > 2) 
0097:  MOVF   2E,W
0098:  SUBLW  02
0099:  BTFSS  03.0
.................... 			{ 
.................... 				cursorx = 0; 
009A:  CLRF   2E
.................... 			} 
.................... 		} 
....................  
.................... 		if (tabuleiro[cursorx][cursory] == -1) 
009B:  MOVF   2E,W
009C:  MOVWF  40
009D:  MOVLW  03
009E:  MOVWF  41
009F:  CALL   040
00A0:  MOVF   2F,W
00A1:  ADDWF  78,W
00A2:  ADDLW  37
00A3:  MOVWF  04
00A4:  BCF    03.7
00A5:  MOVF   00,W
00A6:  SUBLW  FF
00A7:  BTFSS  03.2
00A8:  GOTO   0B7
.................... 		{ 
.................... 			tabuleiro[cursorx][cursory] = 0; 
00A9:  MOVF   2E,W
00AA:  MOVWF  40
00AB:  MOVLW  03
00AC:  MOVWF  41
00AD:  CALL   040
00AE:  MOVF   2F,W
00AF:  ADDWF  78,W
00B0:  ADDLW  37
00B1:  MOVWF  04
00B2:  BCF    03.7
00B3:  CLRF   00
.................... 			contvelha = 0; 
00B4:  CLRF   36
.................... 			break; 
00B5:  GOTO   0C0
.................... 		} 
00B6:  GOTO   0B8
....................  
.................... 		else 
.................... 		{ 
.................... 			contvelha++; 
00B7:  INCF   36,F
.................... 		} 
....................  
.................... 		if (contvelha == 9) 
00B8:  MOVF   36,W
00B9:  SUBLW  09
00BA:  BTFSS  03.2
00BB:  GOTO   0BF
.................... 		{ 
.................... 			ganhador = 3; 
00BC:  MOVLW  03
00BD:  MOVWF  35
.................... 			break; 
00BE:  GOTO   0C0
.................... 		} 
00BF:  GOTO   090
.................... 	} 
00C0:  BCF    0A.3
00C1:  BCF    0A.4
00C2:  GOTO   257 (RETURN)
.................... } 
....................  
.................... int8 verifica_ganhador(int8 matriz[3][3]) 
.................... { 
.................... 	for (i = 0; i < 3; i++) 
.................... 	{ 
.................... 		if (matriz[i][0] != -1 && matriz[i][0] == matriz[i][1] && matriz[i][0] == matriz[i][2]) 
.................... 			return matriz[i][0]; 
....................  
.................... 		if (matriz[0][i] != -1 && matriz[0][i] == matriz[1][i] && matriz[0][i] == matriz[2][i]) 
.................... 			return matriz[0][i]; 
.................... 	} 
....................  
.................... 	if (matriz[0][0] != -1 && matriz[0][0] == matriz[1][1] && matriz[0][0] == matriz[2][2]) 
.................... 		return matriz[0][0]; 
....................  
.................... 	else if (matriz[0][2] != -1 && matriz[0][2] == matriz[1][1] && matriz[0][2] == matriz[2][0]) 
.................... 		return matriz[0][2]; 
....................  
.................... 	else 
.................... 		return 0; 
.................... } 
....................  
.................... void zera_jogo() 
.................... { 
....................  
.................... 	reinicia_tabuleiro(); 
....................  
.................... 	fimtempo = 0; 
.................... 	tempo = 0; 
.................... 	i = j = x = y = cursorx = cursory = 0; 
.................... 	pontuacaoJ1 = pontuacaoJ2 = ganhador = contvelha = 0; 
.................... } 

Configuration Fuses:
   Word  1: 2CC2   HS NOWDT PUT NOMCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
