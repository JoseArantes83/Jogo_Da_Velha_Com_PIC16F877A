CCS PCM C Compiler, Version 5.076, 56587               26-jun-24 18:33

               Filename:   D:\Documentos\Faculdade\6o_Periodo\Microprocessadores_e_Microcontroladores\Projetos\C\Projeto Final\Jogo_Da_Velha_Com_PIC16F877A\Projeto_Final_Codigo\PF.lst

               ROM used:   374 words (5%)
                           Largest free fragment is 2048
               RAM used:   31 (8%) at main() level
                           33 (9%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   13B
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <PF.h> 
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
*
0041:  CLRF   77
0042:  CLRF   78
0043:  MOVF   3A,W
0044:  BCF    03.0
0045:  BTFSC  3B.0
0046:  ADDWF  77,F
0047:  RRF    77,F
0048:  RRF    78,F
0049:  BTFSC  3B.1
004A:  ADDWF  77,F
004B:  RRF    77,F
004C:  RRF    78,F
004D:  BTFSC  3B.2
004E:  ADDWF  77,F
004F:  RRF    77,F
0050:  RRF    78,F
0051:  BTFSC  3B.3
0052:  ADDWF  77,F
0053:  RRF    77,F
0054:  RRF    78,F
0055:  BTFSC  3B.4
0056:  ADDWF  77,F
0057:  RRF    77,F
0058:  RRF    78,F
0059:  BTFSC  3B.5
005A:  ADDWF  77,F
005B:  RRF    77,F
005C:  RRF    78,F
005D:  BTFSC  3B.6
005E:  ADDWF  77,F
005F:  RRF    77,F
0060:  RRF    78,F
0061:  BTFSC  3B.7
0062:  ADDWF  77,F
0063:  RRF    77,F
0064:  RRF    78,F
0065:  RETURN
....................  
.................... #list 
....................  
.................... #device ADC = 10 
....................  
.................... #FUSES PUT        // Power Up Timer 
.................... #FUSES NOMCLR     // Master Clear pin used for I/O 
.................... #FUSES NOPROTECT  // Code not protected from reading 
.................... #FUSES NOCPD      // No EE protection 
.................... #FUSES NOBROWNOUT // No brownout reset 
.................... #FUSES IESO       // Internal External Switch Over mode enabled 
.................... #FUSES FCMEN      // Fail-safe clock monitor enabled 
.................... #FUSES NOLVP      // No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES BORV40     // Brownout reset at 4.0V 
.................... #FUSES NOWRT      // Program memory not write protected 
....................  
.................... #use delay(crystal = 8MHz) 
.................... #use FIXED_IO(A_outputs = PIN_A5) 
.................... #use FIXED_IO(B_outputs = PIN_B7, PIN_B6, PIN_B5, PIN_B4, PIN_B3, PIN_B2, PIN_B1, PIN_B0) 
.................... #use FIXED_IO(C_outputs = PIN_C7, PIN_C6, PIN_C5, PIN_C4, PIN_C3, PIN_C2, PIN_C1, PIN_C0) 
.................... #use FIXED_IO(D_outputs = PIN_D7, PIN_D6, PIN_D5, PIN_D4, PIN_D3, PIN_D2, PIN_D1, PIN_D0) 
.................... #use FIXED_IO(E_outputs = PIN_E0) 
.................... #define B_SELECT PIN_A0 
.................... #define B_MOVE PIN_A1 
.................... #define B_RESET PIN_A2 
.................... #define RED1 PIN_A5 
.................... #define RED2 PIN_B0 
.................... #define RED3 PIN_B1 
.................... #define GREEN1 PIN_B2 
.................... #define GREEN2 PIN_B3 
.................... #define GREEN3 PIN_B4 
.................... #define LIN1 PIN_B5 
.................... #define LIN2 PIN_B6 
.................... #define LIN3 PIN_B7 
.................... #define GND PIN_E0 
.................... #define A1 PIN_C0 
.................... #define A2 PIN_C1 
.................... #define A3 PIN_C2 
.................... #define A4 PIN_C3 
.................... #define A5 PIN_C4 
.................... #define A6 PIN_C5 
.................... #define A7 PIN_C6 
.................... #define A8 PIN_C7 
.................... #define B1 PIN_D0 
.................... #define B2 PIN_D1 
.................... #define B3 PIN_D2 
.................... #define B4 PIN_D3 
.................... #define B5 PIN_D4 
.................... #define B6 PIN_D5 
.................... #define B7 PIN_D6 
.................... #define B8 PIN_D7 
....................  
....................  
.................... int1 fimtempo = 0; 
.................... int16 tempo = 0; 
.................... int8 i = 0, j = 0, x = 0, y = 0; 
.................... int8 pontuacaoJ1 = 0, pontuacaoJ2 = 0, ganhador = 0; 
.................... int8 tabuleiro[3][3]; 
....................  
.................... #INT_TIMER0 
.................... void TIMER0_isr(VOID) 
.................... { 
....................  
....................    tempo += 1; 
*
002F:  MOVLW  01
0030:  ADDWF  28,F
0031:  BTFSC  03.0
0032:  INCF   29,F
....................  
....................    if (tempo == 50) 
0033:  MOVF   28,W
0034:  SUBLW  32
0035:  BTFSS  03.2
0036:  GOTO   03D
0037:  MOVF   29,F
0038:  BTFSS  03.2
0039:  GOTO   03D
....................    { 
....................  
....................       tempo = 0; 
003A:  CLRF   29
003B:  CLRF   28
....................       fimtempo = 1; 
003C:  BSF    27.0
....................    } 
003D:  BCF    0B.2
003E:  BCF    0A.3
003F:  BCF    0A.4
0040:  GOTO   01B
.................... } 
....................  
.................... void reinicia_tabuleiro() 
.................... { 
....................    for (i = 0; i < 3; i++) 
*
0066:  CLRF   2A
0067:  MOVF   2A,W
0068:  SUBLW  02
0069:  BTFSS  03.0
006A:  GOTO   080
....................    { 
....................  
....................       for (j = 0; j < 3; j++) 
006B:  CLRF   2B
006C:  MOVF   2B,W
006D:  SUBLW  02
006E:  BTFSS  03.0
006F:  GOTO   07E
....................       { 
....................  
....................          tabuleiro[i][j] = -1; 
0070:  MOVF   2A,W
0071:  MOVWF  3A
0072:  MOVLW  03
0073:  MOVWF  3B
0074:  CALL   041
0075:  MOVF   2B,W
0076:  ADDWF  78,W
0077:  ADDLW  31
0078:  MOVWF  04
0079:  BCF    03.7
007A:  MOVLW  FF
007B:  MOVWF  00
007C:  INCF   2B,F
007D:  GOTO   06C
....................       } 
007E:  INCF   2A,F
007F:  GOTO   067
....................    } 
0080:  BCF    0A.3
0081:  BCF    0A.4
0082:  GOTO   163 (RETURN)
.................... } 
....................  
.................... void acende_tabuleiro() 
.................... { 
....................  
....................    output_high(LIN1); 
0083:  MOVLW  00
0084:  BSF    03.5
0085:  MOVWF  06
0086:  BCF    03.5
0087:  BSF    06.5
....................    output_high(LIN2); 
0088:  BSF    03.5
0089:  MOVWF  06
008A:  BCF    03.5
008B:  BSF    06.6
....................    output_high(LIN3); 
008C:  BSF    03.5
008D:  MOVWF  06
008E:  BCF    03.5
008F:  BSF    06.7
....................    output_low(RED1); 
0090:  MOVLW  DF
0091:  BSF    03.5
0092:  MOVWF  05
0093:  BCF    03.5
0094:  BCF    05.5
....................    output_low(RED2); 
0095:  MOVLW  00
0096:  BSF    03.5
0097:  MOVWF  06
0098:  BCF    03.5
0099:  BCF    06.0
....................    output_low(RED3); 
009A:  BSF    03.5
009B:  MOVWF  06
009C:  BCF    03.5
009D:  BCF    06.1
....................    output_low(GREEN1); 
009E:  BSF    03.5
009F:  MOVWF  06
00A0:  BCF    03.5
00A1:  BCF    06.2
....................    output_low(GREEN2); 
00A2:  BSF    03.5
00A3:  MOVWF  06
00A4:  BCF    03.5
00A5:  BCF    06.3
....................    output_low(GREEN3); 
00A6:  BSF    03.5
00A7:  MOVWF  06
00A8:  BCF    03.5
00A9:  BCF    06.4
....................  
....................    if (x == 0) 
00AA:  MOVF   2C,F
00AB:  BTFSS  03.2
00AC:  GOTO   0B3
....................    { 
....................  
....................       output_low(LIN1); 
00AD:  MOVLW  00
00AE:  BSF    03.5
00AF:  MOVWF  06
00B0:  BCF    03.5
00B1:  BCF    06.5
....................    } 
00B2:  GOTO   0C0
....................  
....................    else if (x == 1) 
00B3:  DECFSZ 2C,W
00B4:  GOTO   0BB
....................    { 
....................  
....................       output_low(LIN2); 
00B5:  MOVLW  00
00B6:  BSF    03.5
00B7:  MOVWF  06
00B8:  BCF    03.5
00B9:  BCF    06.6
....................    } 
00BA:  GOTO   0C0
....................  
....................    else 
....................    { 
....................  
....................       output_low(LIN3); 
00BB:  MOVLW  00
00BC:  BSF    03.5
00BD:  MOVWF  06
00BE:  BCF    03.5
00BF:  BCF    06.7
....................    } 
....................  
....................    if (tabuleiro[x][y] == 1) 
00C0:  MOVF   2C,W
00C1:  MOVWF  3A
00C2:  MOVLW  03
00C3:  MOVWF  3B
00C4:  CALL   041
00C5:  MOVF   2D,W
00C6:  ADDWF  78,W
00C7:  ADDLW  31
00C8:  MOVWF  04
00C9:  BCF    03.7
00CA:  DECFSZ 00,W
00CB:  GOTO   0E3
....................    { 
....................  
....................       if (y == 0) 
00CC:  MOVF   2D,F
00CD:  BTFSS  03.2
00CE:  GOTO   0D5
....................       { 
....................  
....................          output_high(RED1); 
00CF:  MOVLW  DF
00D0:  BSF    03.5
00D1:  MOVWF  05
00D2:  BCF    03.5
00D3:  BSF    05.5
....................       } 
00D4:  GOTO   0E2
....................  
....................       else if (y == 1) 
00D5:  DECFSZ 2D,W
00D6:  GOTO   0DD
....................       { 
....................  
....................          output_high(RED2); 
00D7:  MOVLW  00
00D8:  BSF    03.5
00D9:  MOVWF  06
00DA:  BCF    03.5
00DB:  BSF    06.0
....................       } 
00DC:  GOTO   0E2
....................  
....................       else 
....................       { 
....................  
....................          output_high(RED3); 
00DD:  MOVLW  00
00DE:  BSF    03.5
00DF:  MOVWF  06
00E0:  BCF    03.5
00E1:  BSF    06.1
....................       } 
....................    } 
00E2:  GOTO   138
....................  
....................    else if (tabuleiro[x][y] == 2) 
00E3:  MOVF   2C,W
00E4:  MOVWF  3A
00E5:  MOVLW  03
00E6:  MOVWF  3B
00E7:  CALL   041
00E8:  MOVF   2D,W
00E9:  ADDWF  78,W
00EA:  ADDLW  31
00EB:  MOVWF  04
00EC:  BCF    03.7
00ED:  MOVF   00,W
00EE:  SUBLW  02
00EF:  BTFSS  03.2
00F0:  GOTO   108
....................    { 
....................  
....................       if (y == 0) 
00F1:  MOVF   2D,F
00F2:  BTFSS  03.2
00F3:  GOTO   0FA
....................       { 
....................  
....................          output_high(GREEN1); 
00F4:  MOVLW  00
00F5:  BSF    03.5
00F6:  MOVWF  06
00F7:  BCF    03.5
00F8:  BSF    06.2
....................       } 
00F9:  GOTO   107
....................  
....................       else if (y == 1) 
00FA:  DECFSZ 2D,W
00FB:  GOTO   102
....................       { 
....................  
....................          output_high(GREEN2); 
00FC:  MOVLW  00
00FD:  BSF    03.5
00FE:  MOVWF  06
00FF:  BCF    03.5
0100:  BSF    06.3
....................       } 
0101:  GOTO   107
....................  
....................       else 
....................       { 
....................  
....................          output_high(GREEN3); 
0102:  MOVLW  00
0103:  BSF    03.5
0104:  MOVWF  06
0105:  BCF    03.5
0106:  BSF    06.4
....................       } 
....................    } 
0107:  GOTO   138
....................  
....................    else if (tabuleiro[x][y] == 0) 
0108:  MOVF   2C,W
0109:  MOVWF  3A
010A:  MOVLW  03
010B:  MOVWF  3B
010C:  CALL   041
010D:  MOVF   2D,W
010E:  ADDWF  78,W
010F:  ADDLW  31
0110:  MOVWF  04
0111:  BCF    03.7
0112:  MOVF   00,F
0113:  BTFSS  03.2
0114:  GOTO   138
....................    { 
....................  
....................       if (y == 0) 
0115:  MOVF   2D,F
0116:  BTFSS  03.2
0117:  GOTO   123
....................       { 
....................  
....................          output_high(RED1); 
0118:  MOVLW  DF
0119:  BSF    03.5
011A:  MOVWF  05
011B:  BCF    03.5
011C:  BSF    05.5
....................          output_high(GREEN1); 
011D:  MOVLW  00
011E:  BSF    03.5
011F:  MOVWF  06
0120:  BCF    03.5
0121:  BSF    06.2
....................       } 
0122:  GOTO   138
....................  
....................       else if (y == 1) 
0123:  DECFSZ 2D,W
0124:  GOTO   12F
....................       { 
....................  
....................          output_high(RED2); 
0125:  MOVLW  00
0126:  BSF    03.5
0127:  MOVWF  06
0128:  BCF    03.5
0129:  BSF    06.0
....................          output_high(GREEN2); 
012A:  BSF    03.5
012B:  MOVWF  06
012C:  BCF    03.5
012D:  BSF    06.3
....................       } 
012E:  GOTO   138
....................  
....................       else 
....................       { 
....................  
....................          output_high(RED3); 
012F:  MOVLW  00
0130:  BSF    03.5
0131:  MOVWF  06
0132:  BCF    03.5
0133:  BSF    06.1
....................          output_high(GREEN3); 
0134:  BSF    03.5
0135:  MOVWF  06
0136:  BCF    03.5
0137:  BSF    06.4
....................       } 
....................    } 
0138:  BCF    0A.3
0139:  BCF    0A.4
013A:  GOTO   166 (RETURN)
.................... } 
....................  
.................... int8 verifica_ganhador(int8 matriz[3][3]) 
.................... { 
....................  
....................    for (i = 0; i < 3; i++) 
....................    { 
....................  
....................       if (matriz[i][0] != -1 && matriz[i][0] == matriz[i][1] && matriz[i][0] == matriz[i][2]) 
....................          return matriz[i][0]; 
....................       if (matriz[0][i] != -1 && matriz[0][i] == matriz[1][i] && matriz[0][i] == matriz[2][i]) 
....................          return matriz[0][i]; 
....................    } 
....................  
....................    if (matriz[0][0] != -1 && matriz[0][0] == matriz[1][1] && matriz[0][0] == matriz[2][2]) 
....................       return matriz[0][0]; 
....................  
....................    else if (matriz[0][2] != -1 && matriz[0][2] == matriz[1][1] && matriz[0][2] == matriz[2][0]) 
....................       return matriz[0][2]; 
....................  
....................    else 
....................       return 0; 
.................... } 
....................  
.................... void main() 
013B:  MOVF   03,W
013C:  ANDLW  1F
013D:  MOVWF  03
013E:  BCF    27.0
013F:  CLRF   29
0140:  CLRF   28
0141:  CLRF   2A
0142:  CLRF   2B
0143:  CLRF   2C
0144:  CLRF   2D
0145:  CLRF   2E
0146:  CLRF   2F
0147:  CLRF   30
0148:  BSF    03.5
0149:  BSF    03.6
014A:  MOVF   09,W
014B:  ANDLW  C0
014C:  MOVWF  09
014D:  BCF    03.6
014E:  BCF    1F.4
014F:  BCF    1F.5
0150:  MOVLW  00
0151:  BSF    03.6
0152:  MOVWF  08
0153:  BCF    03.5
0154:  CLRF   07
0155:  CLRF   08
0156:  CLRF   09
0157:  BCF    03.7
.................... { 
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_8 | RTCC_8_BIT); // 1, 0 ms overflow 
0158:  BSF    03.5
0159:  BCF    03.6
015A:  MOVF   01,W
015B:  ANDLW  C0
015C:  IORLW  02
015D:  MOVWF  01
....................    enable_interrupts(INT_TIMER0); 
015E:  BCF    03.5
015F:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
0160:  MOVLW  C0
0161:  IORWF  0B,F
....................  
....................    reinicia_tabuleiro(); 
0162:  GOTO   066
....................  
.................... //!   tabuleiro[0][0] = 1; 
.................... //!   tabuleiro[0][1] = 2; 
.................... //!   tabuleiro[0][2] = 0; 
.................... //!   tabuleiro[1][0] = 1; 
.................... //!   tabuleiro[1][1] = 2; 
.................... //!   tabuleiro[1][2] = 0; 
.................... //!   tabuleiro[2][0] = 1; 
.................... //!   tabuleiro[2][1] = 2; 
.................... //!   tabuleiro[2][2] = 0; 
....................  
....................    WHILE(TRUE) 
....................    { 
....................  
....................       if (fimtempo) 
0163:  BTFSS  27.0
0164:  GOTO   174
....................       { 
....................  
....................          acende_tabuleiro(); 
0165:  GOTO   083
....................  
....................          y += 1; 
0166:  MOVLW  01
0167:  ADDWF  2D,F
....................  
....................          if (y == 3) 
0168:  MOVF   2D,W
0169:  SUBLW  03
016A:  BTFSS  03.2
016B:  GOTO   173
....................          { 
....................  
....................             x += 1; 
016C:  MOVLW  01
016D:  ADDWF  2C,F
....................             y = 0; 
016E:  CLRF   2D
....................  
....................             if (x == 3) 
016F:  MOVF   2C,W
0170:  SUBLW  03
0171:  BTFSC  03.2
....................             { 
....................  
....................                x = 0; 
0172:  CLRF   2C
....................             } 
....................          } 
....................  
....................          fimtempo = 0; 
0173:  BCF    27.0
....................       } 
0174:  GOTO   163
....................    } 
.................... } 
0175:  SLEEP

Configuration Fuses:
   Word  1: 2CC2   HS NOWDT PUT NOMCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
