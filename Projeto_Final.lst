CCS PCM C Compiler, Version 5.076, 56587               18-jun-24 08:46

               Filename:   D:\Documentos\Faculdade\6o_Periodo\Microprocessadores_e_Microcontroladores\Projetos\C\Projeto Final\Projeto_Final_Codigo\Projeto_Final.lst

               ROM used:   72 words (1%)
                           Largest free fragment is 2048
               RAM used:   12 (3%) at main() level
                           12 (3%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   033
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <Projeto_Final.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=10 
....................  
.................... #FUSES PUT                   	//Power Up Timer 
.................... #FUSES BROWNOUT              	//Reset when brownout detected 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
....................  
.................... #use delay(crystal=8MHz) 
.................... #use FIXED_IO( A_outputs=PIN_A5 ) 
.................... #use FIXED_IO( B_outputs=PIN_B7,PIN_B6,PIN_B5,PIN_B4,PIN_B3,PIN_B2,PIN_B1,PIN_B0 ) 
.................... #use FIXED_IO( C_outputs=PIN_C7,PIN_C6,PIN_C5,PIN_C4,PIN_C3,PIN_C2,PIN_C1,PIN_C0 ) 
.................... #use FIXED_IO( D_outputs=PIN_D7,PIN_D6,PIN_D5,PIN_D4,PIN_D3,PIN_D2,PIN_D1,PIN_D0 ) 
.................... #define B_SELECT	PIN_A0 
.................... #define B_MOVE	PIN_A1 
.................... #define B_RESET	PIN_A2 
.................... #define L1	PIN_A5 
.................... #define L2	PIN_B0 
.................... #define L3	PIN_B1 
.................... #define L4	PIN_B2 
.................... #define L5	PIN_B3 
.................... #define L6	PIN_B4 
.................... #define L7	PIN_B5 
.................... #define L8	PIN_B6 
.................... #define L9	PIN_B7 
.................... #define A1	PIN_C0 
.................... #define A2	PIN_C1 
.................... #define A3	PIN_C2 
.................... #define A4	PIN_C3 
.................... #define A5	PIN_C4 
.................... #define A6	PIN_C5 
.................... #define A7	PIN_C6 
.................... #define A8	PIN_C7 
.................... #define B1	PIN_D0 
.................... #define B2	PIN_D1 
.................... #define B3	PIN_D2 
.................... #define B4	PIN_D3 
.................... #define B5	PIN_D4 
.................... #define B6	PIN_D5 
.................... #define B7	PIN_D6 
.................... #define B8	PIN_D7 
....................  
....................  
....................  
....................  
.................... #INT_TIMER0 
.................... void  TIMER0_isr(void)  
.................... { 
....................  
002F:  BCF    0B.2
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   01B
.................... } 
....................  
.................... void main() 
0033:  MOVF   03,W
0034:  ANDLW  1F
0035:  MOVWF  03
0036:  BSF    03.5
0037:  BSF    1F.0
0038:  BSF    1F.1
0039:  BSF    1F.2
003A:  BCF    1F.3
003B:  MOVLW  07
003C:  MOVWF  1C
003D:  BCF    03.7
.................... { 
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_8|RTCC_8_BIT);      //1,0 ms overflow 
003E:  MOVF   01,W
003F:  ANDLW  C0
0040:  IORLW  02
0041:  MOVWF  01
....................  
....................  
....................    enable_interrupts(INT_TIMER0); 
0042:  BCF    03.5
0043:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
0044:  MOVLW  C0
0045:  IORWF  0B,F
....................  
....................    while(TRUE) 
....................    { 
0046:  GOTO   046
....................  
....................    } 
....................  
.................... } 
0047:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
